{
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/app.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _Phone = _interopRequireDefault(require(\"./controllers/Phone\"));\n\nvar app = (0, _express[\"default\"])(); // view engine setup\n\napp.set('views', _path[\"default\"].join(__dirname, 'views'));\napp.set('view engine', 'pug'); // app.use(morgan('combined', { stream: winston.stream }));\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\n\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname)));\napp.use((0, _cors[\"default\"])()); // app.get('/', (req, res) => {\n//     return res.status(200).send({'message': 'YAY! Congratulations! Your first endpoint is working'});\n// })\n// app.get('*', (req, res) => {\n//     res.sendFile(path.join(__dirname, 'public', 'index.html'));\n// });\n\napp.use('/api', _routes[\"default\"]); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  var err = new Error('No API mapping found');\n  err.status = 400;\n  next(err);\n}); // error handler\n\napp.use(function (err, req, res, bin) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // winston.error(`${err.status || 500} - ${err.message} - ${req.originalUrl} - ${req.method} - ${req.ip}`);\n  // render the error page\n\n  res.status(err.status || 500);\n  res.json({\n    error: err\n  });\n  res.sendFile(_path[\"default\"].join(__dirname, 'public', 'error.html'));\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXQiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiZXhwcmVzcyIsInJvdXRlcyIsInJlcSIsInJlcyIsIm5leHQiLCJlcnIiLCJFcnJvciIsInN0YXR1cyIsImJpbiIsImxvY2FscyIsIm1lc3NhZ2UiLCJlcnJvciIsImdldCIsInNlbmRGaWxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUVBOztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE9BQVIsRUFBaUJDLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsT0FBckIsQ0FBakI7QUFDQUosR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QixFLENBQ0E7QUFFQTtBQUNBOztBQUNBRCxHQUFHLENBQUNLLEdBQUosQ0FBUUMsdUJBQVdDLElBQVgsRUFBUjtBQUNBUCxHQUFHLENBQUNLLEdBQUosQ0FBUUMsdUJBQVdFLFVBQVgsQ0FBc0I7QUFDMUJDLEVBQUFBLFFBQVEsRUFBRTtBQURnQixDQUF0QixDQUFSO0FBR0FULEdBQUcsQ0FBQ0ssR0FBSixDQUFRSyw4QkFBZVIsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixDQUFmLENBQVI7QUFFQUosR0FBRyxDQUFDSyxHQUFKLENBQVEsdUJBQVIsRSxDQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQUwsR0FBRyxDQUFDSyxHQUFKLENBQVEsTUFBUixFQUFnQk0sa0JBQWhCLEUsQ0FLQTs7QUFDQVgsR0FBRyxDQUFDSyxHQUFKLENBQVEsVUFBVU8sR0FBVixFQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUEwQjtBQUM5QixNQUFJQyxHQUFHLEdBQUcsSUFBSUMsS0FBSixDQUFVLHNCQUFWLENBQVY7QUFDQUQsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLEdBQWEsR0FBYjtBQUNBSCxFQUFBQSxJQUFJLENBQUNDLEdBQUQsQ0FBSjtBQUNILENBSkQsRSxDQU1BOztBQUNBZixHQUFHLENBQUNLLEdBQUosQ0FBUSxVQUFVVSxHQUFWLEVBQWVILEdBQWYsRUFBb0JDLEdBQXBCLEVBQXlCSyxHQUF6QixFQUE4QjtBQUNsQztBQUVBTCxFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBV0MsT0FBWCxHQUFxQkwsR0FBRyxDQUFDSyxPQUF6QjtBQUNBUCxFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBV0UsS0FBWCxHQUFtQlQsR0FBRyxDQUFDWixHQUFKLENBQVFzQixHQUFSLENBQVksS0FBWixNQUF1QixhQUF2QixHQUF1Q1AsR0FBdkMsR0FBNkMsRUFBaEUsQ0FKa0MsQ0FNbEM7QUFFQTs7QUFDQUYsRUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVdGLEdBQUcsQ0FBQ0UsTUFBSixJQUFjLEdBQXpCO0FBQ0FKLEVBQUFBLEdBQUcsQ0FBQ04sSUFBSixDQUFTO0FBQUNjLElBQUFBLEtBQUssRUFBQ047QUFBUCxHQUFUO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ1UsUUFBSixDQUFhckIsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixRQUFyQixFQUErQixZQUEvQixDQUFiO0FBQ0gsQ0FaRDtBQWNBb0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCekIsR0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlb2RvcmEvRGVza3RvcC9ub2RlanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IGJvZHlQYXJzZXIgIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuXG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzJztcblxuaW1wb3J0IFBob25lQ29udHJvbGxlciBmcm9tICcuL2NvbnRyb2xsZXJzL1Bob25lJ1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbi8vIHZpZXcgZW5naW5lIHNldHVwXG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICd2aWV3cycpKTtcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ3B1ZycpO1xuLy8gYXBwLnVzZShtb3JnYW4oJ2NvbWJpbmVkJywgeyBzdHJlYW06IHdpbnN0b24uc3RyZWFtIH0pKTtcblxuLy8gdW5jb21tZW50IGFmdGVyIHBsYWNpbmcgeW91ciBmYXZpY29uIGluIC9wdWJsaWNcbi8vYXBwLnVzZShmYXZpY29uKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnLCAnZmF2aWNvbi5pY28nKSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7XG4gICAgZXh0ZW5kZWQ6IGZhbHNlXG59KSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUpKSk7XG5cbmFwcC51c2UoY29ycygpKTtcblxuLy8gYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuLy8gICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZCh7J21lc3NhZ2UnOiAnWUFZISBDb25ncmF0dWxhdGlvbnMhIFlvdXIgZmlyc3QgZW5kcG9pbnQgaXMgd29ya2luZyd9KTtcbi8vIH0pXG5cbi8vIGFwcC5nZXQoJyonLCAocmVxLCByZXMpID0+IHtcbi8vICAgICByZXMuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSwgJ3B1YmxpYycsICdpbmRleC5odG1sJykpO1xuLy8gfSk7XG5cbmFwcC51c2UoJy9hcGknLCByb3V0ZXMpXG5cblxuXG5cbi8vIGNhdGNoIDQwNCBhbmQgZm9yd2FyZCB0byBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uIChyZXEsIHJlcywgbmV4dCkge1xuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoJ05vIEFQSSBtYXBwaW5nIGZvdW5kJyk7XG4gICAgZXJyLnN0YXR1cyA9IDQwMDtcbiAgICBuZXh0KGVycik7XG59KTtcblxuLy8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbiAoZXJyLCByZXEsIHJlcywgYmluKSB7XG4gICAgLy8gc2V0IGxvY2Fscywgb25seSBwcm92aWRpbmcgZXJyb3IgaW4gZGV2ZWxvcG1lbnRcblxuICAgIHJlcy5sb2NhbHMubWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuICAgIHJlcy5sb2NhbHMuZXJyb3IgPSByZXEuYXBwLmdldCgnZW52JykgPT09ICdkZXZlbG9wbWVudCcgPyBlcnIgOiB7fTtcblxuICAgIC8vIHdpbnN0b24uZXJyb3IoYCR7ZXJyLnN0YXR1cyB8fCA1MDB9IC0gJHtlcnIubWVzc2FnZX0gLSAke3JlcS5vcmlnaW5hbFVybH0gLSAke3JlcS5tZXRob2R9IC0gJHtyZXEuaXB9YCk7XG5cbiAgICAvLyByZW5kZXIgdGhlIGVycm9yIHBhZ2VcbiAgICByZXMuc3RhdHVzKGVyci5zdGF0dXMgfHwgNTAwKTtcbiAgICByZXMuanNvbih7ZXJyb3I6ZXJyfSlcbiAgICByZXMuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSwgJ3B1YmxpYycsICdlcnJvci5odG1sJykpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "set",
        "path",
        "join",
        "__dirname",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "express",
        "routes",
        "req",
        "res",
        "next",
        "err",
        "Error",
        "status",
        "bin",
        "locals",
        "message",
        "error",
        "get",
        "sendFile",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AAEA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB,E,CACA;AAEA;AACA;;AACAD,GAAG,CAACK,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAP,GAAG,CAACK,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAC1BC,EAAAA,QAAQ,EAAE;AADgB,CAAtB,CAAR;AAGAT,GAAG,CAACK,GAAJ,CAAQK,8BAAeR,iBAAKC,IAAL,CAAUC,SAAV,CAAf,CAAR;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,uBAAR,E,CAEA;AACA;AACA;AAEA;AACA;AACA;;AAEAL,GAAG,CAACK,GAAJ,CAAQ,MAAR,EAAgBM,kBAAhB,E,CAKA;;AACAX,GAAG,CAACK,GAAJ,CAAQ,UAAUO,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9B,MAAIC,GAAG,GAAG,IAAIC,KAAJ,CAAU,sBAAV,CAAV;AACAD,EAAAA,GAAG,CAACE,MAAJ,GAAa,GAAb;AACAH,EAAAA,IAAI,CAACC,GAAD,CAAJ;AACH,CAJD,E,CAMA;;AACAf,GAAG,CAACK,GAAJ,CAAQ,UAAUU,GAAV,EAAeH,GAAf,EAAoBC,GAApB,EAAyBK,GAAzB,EAA8B;AAClC;AAEAL,EAAAA,GAAG,CAACM,MAAJ,CAAWC,OAAX,GAAqBL,GAAG,CAACK,OAAzB;AACAP,EAAAA,GAAG,CAACM,MAAJ,CAAWE,KAAX,GAAmBT,GAAG,CAACZ,GAAJ,CAAQsB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCP,GAAvC,GAA6C,EAAhE,CAJkC,CAMlC;AAEA;;AACAF,EAAAA,GAAG,CAACI,MAAJ,CAAWF,GAAG,CAACE,MAAJ,IAAc,GAAzB;AACAJ,EAAAA,GAAG,CAACN,IAAJ,CAAS;AAACc,IAAAA,KAAK,EAACN;AAAP,GAAT;AACAF,EAAAA,GAAG,CAACU,QAAJ,CAAarB,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,YAA/B,CAAb;AACH,CAZD;AAcAoB,MAAM,CAACC,OAAP,GAAiBzB,GAAjB",
      "sourceRoot": "/Users/teodora/Desktop/nodejs",
      "sourcesContent": [
        "import express from 'express';\nimport path from 'path';\nimport bodyParser  from 'body-parser';\nimport cors from 'cors';\n\nimport routes from './routes';\n\nimport PhoneController from './controllers/Phone'\n\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n// app.use(morgan('combined', { stream: winston.stream }));\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n    extended: false\n}));\napp.use(express.static(path.join(__dirname)));\n\napp.use(cors());\n\n// app.get('/', (req, res) => {\n//     return res.status(200).send({'message': 'YAY! Congratulations! Your first endpoint is working'});\n// })\n\n// app.get('*', (req, res) => {\n//     res.sendFile(path.join(__dirname, 'public', 'index.html'));\n// });\n\napp.use('/api', routes)\n\n\n\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    var err = new Error('No API mapping found');\n    err.status = 400;\n    next(err);\n});\n\n// error handler\napp.use(function (err, req, res, bin) {\n    // set locals, only providing error in development\n\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // winston.error(`${err.status || 500} - ${err.message} - ${req.originalUrl} - ${req.method} - ${req.ip}`);\n\n    // render the error page\n    res.status(err.status || 500);\n    res.json({error:err})\n    res.sendFile(path.join(__dirname, 'public', 'error.html'));\n});\n\nmodule.exports = app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567155019893
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/routes/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _phone = _interopRequireDefault(require(\"../controllers/phone\"));\n\nvar router = (0, _express.Router)();\nrouter.get('/phones', _phone[\"default\"].getAll);\nrouter.get('/phones/:id', _phone[\"default\"].get);\nrouter.put('/phones/:id', _phone[\"default\"].update);\nrouter.post('/phones', _phone[\"default\"].create);\nrouter[\"delete\"]('/phones/:id', _phone[\"default\"][\"delete\"]);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsIlBob25lQ29udHJvbGxlciIsImdldEFsbCIsInB1dCIsInVwZGF0ZSIsInBvc3QiLCJjcmVhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUVBOztBQUVBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxTQUFYLEVBQXNCQyxrQkFBZ0JDLE1BQXRDO0FBQ0FILE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLGFBQVgsRUFBMEJDLGtCQUFnQkQsR0FBMUM7QUFDQUQsTUFBTSxDQUFDSSxHQUFQLENBQVcsYUFBWCxFQUEwQkYsa0JBQWdCRyxNQUExQztBQUNBTCxNQUFNLENBQUNNLElBQVAsQ0FBWSxTQUFaLEVBQXVCSixrQkFBZ0JLLE1BQXZDO0FBQ0FQLE1BQU0sVUFBTixDQUFjLGFBQWQsRUFBNkJFLDJCQUE3QjtlQUVlRixNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90ZW9kb3JhL0Rlc2t0b3Avbm9kZWpzL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuXG5pbXBvcnQgUGhvbmVDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL3Bob25lJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy9waG9uZXMnLCBQaG9uZUNvbnRyb2xsZXIuZ2V0QWxsKTtcbnJvdXRlci5nZXQoJy9waG9uZXMvOmlkJywgUGhvbmVDb250cm9sbGVyLmdldCk7XG5yb3V0ZXIucHV0KCcvcGhvbmVzLzppZCcsIFBob25lQ29udHJvbGxlci51cGRhdGUpO1xucm91dGVyLnBvc3QoJy9waG9uZXMnLCBQaG9uZUNvbnRyb2xsZXIuY3JlYXRlKTtcbnJvdXRlci5kZWxldGUoJy9waG9uZXMvOmlkJywgUGhvbmVDb250cm9sbGVyLmRlbGV0ZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "get",
        "PhoneController",
        "getAll",
        "put",
        "update",
        "post",
        "create"
      ],
      "mappings": ";;;;;;;;;AAAA;;AAEA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,SAAX,EAAsBC,kBAAgBC,MAAtC;AACAH,MAAM,CAACC,GAAP,CAAW,aAAX,EAA0BC,kBAAgBD,GAA1C;AACAD,MAAM,CAACI,GAAP,CAAW,aAAX,EAA0BF,kBAAgBG,MAA1C;AACAL,MAAM,CAACM,IAAP,CAAY,SAAZ,EAAuBJ,kBAAgBK,MAAvC;AACAP,MAAM,UAAN,CAAc,aAAd,EAA6BE,2BAA7B;eAEeF,M",
      "sourceRoot": "/Users/teodora/Desktop/nodejs/routes",
      "sourcesContent": [
        "import { Router } from 'express';\n\nimport PhoneController from '../controllers/phone';\n\nconst router = Router();\n\nrouter.get('/phones', PhoneController.getAll);\nrouter.get('/phones/:id', PhoneController.get);\nrouter.put('/phones/:id', PhoneController.update);\nrouter.post('/phones', PhoneController.create);\nrouter.delete('/phones/:id', PhoneController.delete);\n\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567170138060
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/controllers/phone.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/controllers/phone.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/controllers/phone.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/controllers/phone.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
        "sourceFileName": "phone.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _Phone = _interopRequireDefault(require(\"../models/Phone\"));\n\nvar _util = require(\"../util\");\n\nvar Phone = {\n  create: function () {\n    var _create = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee(req, res, next) {\n      var metadata, phone;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              metadata = '';\n\n              if (!req.body.proprietary) {\n                _context.next = 6;\n                break;\n              }\n\n              metadata = (0, _util.hash)(req.body.proprietary);\n\n              if (metadata) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'Unprocessable entity'\n              }));\n\n            case 6:\n              _context.next = 8;\n              return _Phone[\"default\"].create(req.body, metadata);\n\n            case 8:\n              phone = _context.sent;\n              res.status(201).send(phone);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              next(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    function create(_x, _x2, _x3) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  getAll: function () {\n    var _getAll = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee2(req, res, next) {\n      var phones;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _Phone[\"default\"].findAll();\n\n            case 3:\n              phones = _context2.sent;\n              res.status(200).send(phones);\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              next(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    function getAll(_x4, _x5, _x6) {\n      return _getAll.apply(this, arguments);\n    }\n\n    return getAll;\n  }(),\n  update: function () {\n    var _update = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee3(req, res, next) {\n      var id, phone, metadata, updatedPhone;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              id = req.params.id;\n              _context3.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context3.sent;\n\n              if (phone) {\n                _context3.next = 7;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.status(404).send({\n                'message': 'Phone not found'\n              }));\n\n            case 7:\n              metadata = phone.metadata;\n\n              if (!req.body.proprietary) {\n                _context3.next = 12;\n                break;\n              }\n\n              metadata = (0, _util.hash)(req.body.proprietary);\n\n              if (metadata) {\n                _context3.next = 12;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.status(400).send({\n                'message': 'Unprocessable entity'\n              }));\n\n            case 12:\n              _context3.next = 14;\n              return _Phone[\"default\"].update(id, req.body, metadata);\n\n            case 14:\n              updatedPhone = _context3.sent;\n              res.status(200).send(updatedPhone);\n              _context3.next = 22;\n              break;\n\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              next(_context3.t0);\n\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 18]]);\n    }));\n\n    function update(_x7, _x8, _x9) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }(),\n  \"delete\": function () {\n    var _delete2 = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee4(req, res, next) {\n      var id, phone, deletedPhone;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id = req.params.id;\n              _context4.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context4.sent;\n              if (!phone) res.status(404).send({\n                'message': 'Phone not found'\n              });\n              _context4.next = 8;\n              return _Phone[\"default\"][\"delete\"](id);\n\n            case 8:\n              deletedPhone = _context4.sent;\n              res.status(204).send(deletedPhone);\n              _context4.next = 15;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n              next(_context4.t0);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 12]]);\n    }));\n\n    function _delete(_x10, _x11, _x12) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  get: function () {\n    var _get = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee5(req, res, next) {\n      var id, phone;\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id = req.params.id;\n              _context5.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context5.sent;\n              if (!phone) res.status(404).send({\n                'message': 'Phone not found'\n              });\n              res.status(200).send(phone);\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              next(_context5.t0);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 9]]);\n    }));\n\n    function get(_x13, _x14, _x15) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }()\n};\nvar _default = Phone;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob25lLmpzIl0sIm5hbWVzIjpbIlBob25lIiwiY3JlYXRlIiwicmVxIiwicmVzIiwibmV4dCIsIm1ldGFkYXRhIiwiYm9keSIsInByb3ByaWV0YXJ5Iiwic3RhdHVzIiwic2VuZCIsIlBob25lTW9kZWwiLCJwaG9uZSIsImdldEFsbCIsImZpbmRBbGwiLCJwaG9uZXMiLCJ1cGRhdGUiLCJpZCIsInBhcmFtcyIsImZpbmRPbmUiLCJ1cGRhdGVkUGhvbmUiLCJjb25zb2xlIiwibG9nIiwiZGVsZXRlZFBob25lIiwiZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsS0FBSyxHQUFHO0FBRUpDLEVBQUFBLE1BRkk7QUFBQTtBQUFBO0FBQUEsa0RBRUdDLEdBRkgsRUFFUUMsR0FGUixFQUVhQyxJQUZiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBSUVDLGNBQUFBLFFBSkYsR0FJYSxFQUpiOztBQUFBLG1CQUtFSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FMWDtBQUFBO0FBQUE7QUFBQTs7QUFNRUYsY0FBQUEsUUFBUSxHQUFHLGdCQUFLSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FBZCxDQUFYOztBQU5GLGtCQU9PRixRQVBQO0FBQUE7QUFBQTtBQUFBOztBQUFBLCtDQVFhRixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckIsQ0FSYjs7QUFBQTtBQUFBO0FBQUEscUJBVWtCQyxrQkFBV1QsTUFBWCxDQUFrQkMsR0FBRyxDQUFDSSxJQUF0QixFQUE0QkQsUUFBNUIsQ0FWbEI7O0FBQUE7QUFVSU0sY0FBQUEsS0FWSjtBQVdGUixjQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkUsS0FBckI7QUFYRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQWFGUCxjQUFBQSxJQUFJLGFBQUo7O0FBYkU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFpQkpRLEVBQUFBLE1BakJJO0FBQUE7QUFBQTtBQUFBLG1EQWlCR1YsR0FqQkgsRUFpQlFDLEdBakJSLEVBaUJhQyxJQWpCYjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBbUJtQk0sa0JBQVdHLE9BQVgsRUFuQm5COztBQUFBO0FBbUJJQyxjQUFBQSxNQW5CSjtBQW9CRlgsY0FBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJLLE1BQXJCO0FBcEJFO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBc0JGVixjQUFBQSxJQUFJLGNBQUo7O0FBdEJFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBMEJKVyxFQUFBQSxNQTFCSTtBQUFBO0FBQUE7QUFBQSxtREEwQkdiLEdBMUJILEVBMEJRQyxHQTFCUixFQTBCYUMsSUExQmI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUE0QklZLGNBQUFBLEVBNUJKLEdBNEJTZCxHQUFHLENBQUNlLE1BQUosQ0FBV0QsRUE1QnBCO0FBQUE7QUFBQSxxQkE2QmtCTixrQkFBV1EsT0FBWCxDQUFtQkYsRUFBbkIsQ0E3QmxCOztBQUFBO0FBNkJJTCxjQUFBQSxLQTdCSjs7QUFBQSxrQkE4QkdBLEtBOUJIO0FBQUE7QUFBQTtBQUFBOztBQUFBLGdEQStCU1IsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQywyQkFBVztBQUFaLGVBQXJCLENBL0JUOztBQUFBO0FBZ0NFSixjQUFBQSxRQWhDRixHQWdDYU0sS0FBSyxDQUFDTixRQWhDbkI7O0FBQUEsbUJBaUNFSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FqQ1g7QUFBQTtBQUFBO0FBQUE7O0FBa0NFRixjQUFBQSxRQUFRLEdBQUcsZ0JBQUtILEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxXQUFkLENBQVg7O0FBbENGLGtCQW1DT0YsUUFuQ1A7QUFBQTtBQUFBO0FBQUE7O0FBQUEsZ0RBb0NhRixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckIsQ0FwQ2I7O0FBQUE7QUFBQTtBQUFBLHFCQXNDeUJDLGtCQUFXSyxNQUFYLENBQWtCQyxFQUFsQixFQUFzQmQsR0FBRyxDQUFDSSxJQUExQixFQUFnQ0QsUUFBaEMsQ0F0Q3pCOztBQUFBO0FBc0NJYyxjQUFBQSxZQXRDSjtBQXVDRmhCLGNBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCVSxZQUFyQjtBQXZDRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXlDRkMsY0FBQUEsT0FBTyxDQUFDQyxHQUFSO0FBQ0FqQixjQUFBQSxJQUFJLGNBQUo7O0FBMUNFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbURBOENHRixHQTlDSCxFQThDUUMsR0E5Q1IsRUE4Q2FDLElBOUNiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBZ0RJWSxjQUFBQSxFQWhESixHQWdEU2QsR0FBRyxDQUFDZSxNQUFKLENBQVdELEVBaERwQjtBQUFBO0FBQUEscUJBaURrQk4sa0JBQVdRLE9BQVgsQ0FBbUJGLEVBQW5CLENBakRsQjs7QUFBQTtBQWlESUwsY0FBQUEsS0FqREo7QUFrREYsa0JBQUksQ0FBQ0EsS0FBTCxFQUNJUixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckI7QUFuREY7QUFBQSxxQkFvRHlCQyw0QkFBa0JNLEVBQWxCLENBcER6Qjs7QUFBQTtBQW9ESU0sY0FBQUEsWUFwREo7QUFxREZuQixjQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQmEsWUFBckI7QUFyREU7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUF3REZsQixjQUFBQSxJQUFJLGNBQUo7O0FBeERFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBNERKbUIsRUFBQUEsR0E1REk7QUFBQTtBQUFBO0FBQUEsbURBNERBckIsR0E1REEsRUE0REtDLEdBNURMLEVBNERVQyxJQTVEVjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQThESVksY0FBQUEsRUE5REosR0E4RFNkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXRCxFQTlEcEI7QUFBQTtBQUFBLHFCQStEa0JOLGtCQUFXUSxPQUFYLENBQW1CRixFQUFuQixDQS9EbEI7O0FBQUE7QUErRElMLGNBQUFBLEtBL0RKO0FBZ0VGLGtCQUFJLENBQUNBLEtBQUwsRUFDSVIsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQywyQkFBVztBQUFaLGVBQXJCO0FBQ0pOLGNBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRSxLQUFyQjtBQWxFRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXFFRlAsY0FBQUEsSUFBSSxjQUFKOztBQXJFRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLENBQWQ7ZUEyRWVKLEsiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlb2RvcmEvRGVza3RvcC9ub2RlanMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGhvbmVNb2RlbCBmcm9tICcuLi9tb2RlbHMvUGhvbmUnO1xuaW1wb3J0IHtoYXNoLCB1bmhhc2h9IGZyb20gJy4uL3V0aWwnO1xuXG5jb25zdCBQaG9uZSA9IHtcblxuICAgIGFzeW5jIGNyZWF0ZShyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgbGV0IG1ldGFkYXRhID0gJydcbiAgICAgICAgICAgIGlmIChyZXEuYm9keS5wcm9wcmlldGFyeSkge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhID0gaGFzaChyZXEuYm9keS5wcm9wcmlldGFyeSk7XG4gICAgICAgICAgICAgICAgaWYgKCFtZXRhZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsnbWVzc2FnZSc6ICdVbnByb2Nlc3NhYmxlIGVudGl0eSd9KVxuICAgICAgICAgICAgfSAgICBcbiAgICAgICAgICAgIGNvbnN0IHBob25lID0gYXdhaXQgUGhvbmVNb2RlbC5jcmVhdGUocmVxLmJvZHksIG1ldGFkYXRhKTtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKHBob25lKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIG5leHQoZXJyb3IpXG4gICAgICAgIH0gXG4gICAgfSxcblxuICAgIGFzeW5jIGdldEFsbChyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcGhvbmVzID0gYXdhaXQgUGhvbmVNb2RlbC5maW5kQWxsKCk7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChwaG9uZXMpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYXN5bmMgdXBkYXRlKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHJlcS5wYXJhbXMuaWQ7XG4gICAgICAgICAgICBjb25zdCBwaG9uZSA9IGF3YWl0IFBob25lTW9kZWwuZmluZE9uZShpZCk7XG4gICAgICAgICAgICBpZiAoIXBob25lKVxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuc2VuZCh7J21lc3NhZ2UnOiAnUGhvbmUgbm90IGZvdW5kJ30pXG4gICAgICAgICAgICBsZXQgbWV0YWRhdGEgPSBwaG9uZS5tZXRhZGF0YTtcbiAgICAgICAgICAgIGlmIChyZXEuYm9keS5wcm9wcmlldGFyeSkge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhID0gaGFzaChyZXEuYm9keS5wcm9wcmlldGFyeSk7XG4gICAgICAgICAgICAgICAgaWYgKCFtZXRhZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsnbWVzc2FnZSc6ICdVbnByb2Nlc3NhYmxlIGVudGl0eSd9KVxuICAgICAgICAgICAgfSAgICBcbiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZWRQaG9uZSA9IGF3YWl0IFBob25lTW9kZWwudXBkYXRlKGlkLCByZXEuYm9keSwgbWV0YWRhdGEpO1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQodXBkYXRlZFBob25lKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKVxuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9LCBcblxuICAgIGFzeW5jIGRlbGV0ZShyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgaWQgPSByZXEucGFyYW1zLmlkO1xuICAgICAgICAgICAgY29uc3QgcGhvbmUgPSBhd2FpdCBQaG9uZU1vZGVsLmZpbmRPbmUoaWQpO1xuICAgICAgICAgICAgaWYgKCFwaG9uZSlcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwNCkuc2VuZCh7J21lc3NhZ2UnOiAnUGhvbmUgbm90IGZvdW5kJ30pXG4gICAgICAgICAgICBjb25zdCBkZWxldGVkUGhvbmUgPSBhd2FpdCBQaG9uZU1vZGVsLmRlbGV0ZShpZCk7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwNCkuc2VuZChkZWxldGVkUGhvbmUpXG4gICAgICAgICAgICBcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIG5leHQoZXJyb3IpXG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYXN5bmMgZ2V0KHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHJlcS5wYXJhbXMuaWQ7XG4gICAgICAgICAgICBjb25zdCBwaG9uZSA9IGF3YWl0IFBob25lTW9kZWwuZmluZE9uZShpZCk7XG4gICAgICAgICAgICBpZiAoIXBob25lKVxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKHsnbWVzc2FnZSc6ICdQaG9uZSBub3QgZm91bmQnfSlcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHBob25lKVxuXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBuZXh0KGVycm9yKVxuICAgICAgICB9XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFBob25lOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "phone.js"
      ],
      "names": [
        "Phone",
        "create",
        "req",
        "res",
        "next",
        "metadata",
        "body",
        "proprietary",
        "status",
        "send",
        "PhoneModel",
        "phone",
        "getAll",
        "findAll",
        "phones",
        "update",
        "id",
        "params",
        "findOne",
        "updatedPhone",
        "console",
        "log",
        "deletedPhone",
        "get"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,KAAK,GAAG;AAEJC,EAAAA,MAFI;AAAA;AAAA;AAAA,kDAEGC,GAFH,EAEQC,GAFR,EAEaC,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIEC,cAAAA,QAJF,GAIa,EAJb;;AAAA,mBAKEH,GAAG,CAACI,IAAJ,CAASC,WALX;AAAA;AAAA;AAAA;;AAMEF,cAAAA,QAAQ,GAAG,gBAAKH,GAAG,CAACI,IAAJ,CAASC,WAAd,CAAX;;AANF,kBAOOF,QAPP;AAAA;AAAA;AAAA;;AAAA,+CAQaF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CARb;;AAAA;AAAA;AAAA,qBAUkBC,kBAAWT,MAAX,CAAkBC,GAAG,CAACI,IAAtB,EAA4BD,QAA5B,CAVlB;;AAAA;AAUIM,cAAAA,KAVJ;AAWFR,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,KAArB;AAXE;AAAA;;AAAA;AAAA;AAAA;AAaFP,cAAAA,IAAI,aAAJ;;AAbE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiBJQ,EAAAA,MAjBI;AAAA;AAAA;AAAA,mDAiBGV,GAjBH,EAiBQC,GAjBR,EAiBaC,IAjBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAmBmBM,kBAAWG,OAAX,EAnBnB;;AAAA;AAmBIC,cAAAA,MAnBJ;AAoBFX,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,MAArB;AApBE;AAAA;;AAAA;AAAA;AAAA;AAsBFV,cAAAA,IAAI,cAAJ;;AAtBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0BJW,EAAAA,MA1BI;AAAA;AAAA;AAAA,mDA0BGb,GA1BH,EA0BQC,GA1BR,EA0BaC,IA1Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BIY,cAAAA,EA5BJ,GA4BSd,GAAG,CAACe,MAAJ,CAAWD,EA5BpB;AAAA;AAAA,qBA6BkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CA7BlB;;AAAA;AA6BIL,cAAAA,KA7BJ;;AAAA,kBA8BGA,KA9BH;AAAA;AAAA;AAAA;;AAAA,gDA+BSR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CA/BT;;AAAA;AAgCEJ,cAAAA,QAhCF,GAgCaM,KAAK,CAACN,QAhCnB;;AAAA,mBAiCEH,GAAG,CAACI,IAAJ,CAASC,WAjCX;AAAA;AAAA;AAAA;;AAkCEF,cAAAA,QAAQ,GAAG,gBAAKH,GAAG,CAACI,IAAJ,CAASC,WAAd,CAAX;;AAlCF,kBAmCOF,QAnCP;AAAA;AAAA;AAAA;;AAAA,gDAoCaF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CApCb;;AAAA;AAAA;AAAA,qBAsCyBC,kBAAWK,MAAX,CAAkBC,EAAlB,EAAsBd,GAAG,CAACI,IAA1B,EAAgCD,QAAhC,CAtCzB;;AAAA;AAsCIc,cAAAA,YAtCJ;AAuCFhB,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,YAArB;AAvCE;AAAA;;AAAA;AAAA;AAAA;AAyCFC,cAAAA,OAAO,CAACC,GAAR;AACAjB,cAAAA,IAAI,cAAJ;;AA1CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDA8CGF,GA9CH,EA8CQC,GA9CR,EA8CaC,IA9Cb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDIY,cAAAA,EAhDJ,GAgDSd,GAAG,CAACe,MAAJ,CAAWD,EAhDpB;AAAA;AAAA,qBAiDkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CAjDlB;;AAAA;AAiDIL,cAAAA,KAjDJ;AAkDF,kBAAI,CAACA,KAAL,EACIR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB;AAnDF;AAAA,qBAoDyBC,4BAAkBM,EAAlB,CApDzB;;AAAA;AAoDIM,cAAAA,YApDJ;AAqDFnB,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,YAArB;AArDE;AAAA;;AAAA;AAAA;AAAA;AAwDFlB,cAAAA,IAAI,cAAJ;;AAxDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4DJmB,EAAAA,GA5DI;AAAA;AAAA;AAAA,mDA4DArB,GA5DA,EA4DKC,GA5DL,EA4DUC,IA5DV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8DIY,cAAAA,EA9DJ,GA8DSd,GAAG,CAACe,MAAJ,CAAWD,EA9DpB;AAAA;AAAA,qBA+DkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CA/DlB;;AAAA;AA+DIL,cAAAA,KA/DJ;AAgEF,kBAAI,CAACA,KAAL,EACIR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB;AACJN,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,KAArB;AAlEE;AAAA;;AAAA;AAAA;AAAA;AAqEFP,cAAAA,IAAI,cAAJ;;AArEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAd;eA2EeJ,K",
      "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
      "sourcesContent": [
        "import PhoneModel from '../models/Phone';\nimport {hash, unhash} from '../util';\n\nconst Phone = {\n\n    async create(req, res, next) {\n        try {\n            let metadata = ''\n            if (req.body.proprietary) {\n                metadata = hash(req.body.proprietary);\n                if (!metadata)\n                    return res.status(400).send({'message': 'Unprocessable entity'})\n            }    \n            const phone = await PhoneModel.create(req.body, metadata);\n            res.status(201).send(phone);\n        } catch (error) {\n            next(error)\n        } \n    },\n\n    async getAll(req, res, next) {\n        try {\n            const phones = await PhoneModel.findAll();\n            res.status(200).send(phones);\n        } catch (error) {\n            next(error);\n        }\n    },\n\n    async update(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                return res.status(404).send({'message': 'Phone not found'})\n            let metadata = phone.metadata;\n            if (req.body.proprietary) {\n                metadata = hash(req.body.proprietary);\n                if (!metadata)\n                    return res.status(400).send({'message': 'Unprocessable entity'})\n            }    \n            const updatedPhone = await PhoneModel.update(id, req.body, metadata);\n            res.status(200).send(updatedPhone);\n        } catch (error) {\n            console.log(error)\n            next(error);\n        }\n    }, \n\n    async delete(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                res.status(404).send({'message': 'Phone not found'})\n            const deletedPhone = await PhoneModel.delete(id);\n            res.status(204).send(deletedPhone)\n            \n        } catch (error) {\n            next(error)\n        }\n    },\n\n    async get(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                res.status(404).send({'message': 'Phone not found'})\n            res.status(200).send(phone)\n\n        } catch (error) {\n            next(error)\n        }\n    }\n\n}\n\nexport default Phone;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567170199422
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/models/Phone.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/models/Phone.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/models/Phone.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/models/Phone.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs/models",
        "sourceFileName": "Phone.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _uuid = _interopRequireDefault(require(\"uuid\"));\n\nvar _util = _interopRequireDefault(require(\"./../util\"));\n\nvar Phone =\n/*#__PURE__*/\nfunction () {\n  function Phone() {\n    (0, _classCallCheck2[\"default\"])(this, Phone);\n    this.phones = [];\n  }\n\n  (0, _createClass2[\"default\"])(Phone, [{\n    key: \"create\",\n    value: function create(data, metadata) {\n      var phone = {\n        id: _uuid[\"default\"].v4(),\n        type: data.type || '',\n        serial: data.serial || '',\n        color: data.color || '',\n        metadata: metadata,\n        created: _moment[\"default\"].now(),\n        updated: _moment[\"default\"].now()\n      };\n      this.phones.push(phone);\n      return phone;\n    }\n  }, {\n    key: \"findOne\",\n    value: function findOne(id) {\n      return this.phones.find(function (phone) {\n        return phone.id === id;\n      });\n    }\n  }, {\n    key: \"findAll\",\n    value: function findAll() {\n      return this.phones;\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, data, metadata) {\n      var phone = this.findOne(id);\n      var index = this.phones.indexOf(phone);\n      this.phones[index].type = data.type || phone.type;\n      this.phones[index].serial = data.serial || phone.serial;\n      this.phones[index].color = data.color || phone.color;\n      this.phones[index].metadata = metadata;\n      this.phones[index].updated = _moment[\"default\"].now();\n      return this.phones[index];\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      var phone = this.findOne(id);\n      var index = this.phones.indexOf(phone);\n      this.phones.splice(index, 1);\n      return {};\n    }\n  }]);\n  return Phone;\n}();\n\nvar _default = new Phone();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBob25lLmpzIl0sIm5hbWVzIjpbIlBob25lIiwicGhvbmVzIiwiZGF0YSIsIm1ldGFkYXRhIiwicGhvbmUiLCJpZCIsInV1aWQiLCJ2NCIsInR5cGUiLCJzZXJpYWwiLCJjb2xvciIsImNyZWF0ZWQiLCJtb21lbnQiLCJub3ciLCJ1cGRhdGVkIiwicHVzaCIsImZpbmQiLCJmaW5kT25lIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0lBRU1BLEs7OztBQUVGLG1CQUFjO0FBQUE7QUFDVixTQUFLQyxNQUFMLEdBQWMsRUFBZDtBQUNIOzs7OzJCQUVNQyxJLEVBQU1DLFEsRUFBVTtBQUNuQixVQUFNQyxLQUFLLEdBQUc7QUFDVkMsUUFBQUEsRUFBRSxFQUFFQyxpQkFBS0MsRUFBTCxFQURNO0FBRVZDLFFBQUFBLElBQUksRUFBRU4sSUFBSSxDQUFDTSxJQUFMLElBQWEsRUFGVDtBQUdWQyxRQUFBQSxNQUFNLEVBQUVQLElBQUksQ0FBQ08sTUFBTCxJQUFlLEVBSGI7QUFJVkMsUUFBQUEsS0FBSyxFQUFFUixJQUFJLENBQUNRLEtBQUwsSUFBYyxFQUpYO0FBS1ZQLFFBQUFBLFFBQVEsRUFBRUEsUUFMQTtBQU1WUSxRQUFBQSxPQUFPLEVBQUVDLG1CQUFPQyxHQUFQLEVBTkM7QUFPVkMsUUFBQUEsT0FBTyxFQUFFRixtQkFBT0MsR0FBUDtBQVBDLE9BQWQ7QUFVQSxXQUFLWixNQUFMLENBQVljLElBQVosQ0FBaUJYLEtBQWpCO0FBQ0EsYUFBT0EsS0FBUDtBQUNIOzs7NEJBRU9DLEUsRUFBSTtBQUNSLGFBQU8sS0FBS0osTUFBTCxDQUFZZSxJQUFaLENBQWlCLFVBQUFaLEtBQUs7QUFBQSxlQUFJQSxLQUFLLENBQUNDLEVBQU4sS0FBYUEsRUFBakI7QUFBQSxPQUF0QixDQUFQO0FBQ0g7Ozs4QkFFUztBQUNOLGFBQU8sS0FBS0osTUFBWjtBQUNIOzs7MkJBRU1JLEUsRUFBSUgsSSxFQUFNQyxRLEVBQVU7QUFDdkIsVUFBTUMsS0FBSyxHQUFHLEtBQUthLE9BQUwsQ0FBYVosRUFBYixDQUFkO0FBQ0EsVUFBTWEsS0FBSyxHQUFHLEtBQUtqQixNQUFMLENBQVlrQixPQUFaLENBQW9CZixLQUFwQixDQUFkO0FBRUEsV0FBS0gsTUFBTCxDQUFZaUIsS0FBWixFQUFtQlYsSUFBbkIsR0FBMEJOLElBQUksQ0FBQ00sSUFBTCxJQUFhSixLQUFLLENBQUNJLElBQTdDO0FBQ0EsV0FBS1AsTUFBTCxDQUFZaUIsS0FBWixFQUFtQlQsTUFBbkIsR0FBNEJQLElBQUksQ0FBQ08sTUFBTCxJQUFlTCxLQUFLLENBQUNLLE1BQWpEO0FBQ0EsV0FBS1IsTUFBTCxDQUFZaUIsS0FBWixFQUFtQlIsS0FBbkIsR0FBMkJSLElBQUksQ0FBQ1EsS0FBTCxJQUFjTixLQUFLLENBQUNNLEtBQS9DO0FBQ0EsV0FBS1QsTUFBTCxDQUFZaUIsS0FBWixFQUFtQmYsUUFBbkIsR0FBOEJBLFFBQTlCO0FBQ0EsV0FBS0YsTUFBTCxDQUFZaUIsS0FBWixFQUFtQkosT0FBbkIsR0FBNkJGLG1CQUFPQyxHQUFQLEVBQTdCO0FBRUEsYUFBTyxLQUFLWixNQUFMLENBQVlpQixLQUFaLENBQVA7QUFDSDs7OzRCQUVNYixFLEVBQUk7QUFDUCxVQUFNRCxLQUFLLEdBQUcsS0FBS2EsT0FBTCxDQUFhWixFQUFiLENBQWQ7QUFDQSxVQUFNYSxLQUFLLEdBQUcsS0FBS2pCLE1BQUwsQ0FBWWtCLE9BQVosQ0FBb0JmLEtBQXBCLENBQWQ7QUFDQSxXQUFLSCxNQUFMLENBQVltQixNQUFaLENBQW1CRixLQUFuQixFQUEwQixDQUExQjtBQUNBLGFBQU8sRUFBUDtBQUNIOzs7OztlQUlVLElBQUlsQixLQUFKLEUiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlb2RvcmEvRGVza3RvcC9ub2RlanMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnO1xuaW1wb3J0IHV1aWQgZnJvbSAndXVpZCc7XG5pbXBvcnQgcGFyc2VyIGZyb20gJy4vLi4vdXRpbCdcblxuY2xhc3MgUGhvbmUge1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucGhvbmVzID0gW107XG4gICAgfVxuXG4gICAgY3JlYXRlKGRhdGEsIG1ldGFkYXRhKSB7XG4gICAgICAgIGNvbnN0IHBob25lID0ge1xuICAgICAgICAgICAgaWQ6IHV1aWQudjQoKSwgXG4gICAgICAgICAgICB0eXBlOiBkYXRhLnR5cGUgfHwgJycsXG4gICAgICAgICAgICBzZXJpYWw6IGRhdGEuc2VyaWFsIHx8ICcnLFxuICAgICAgICAgICAgY29sb3I6IGRhdGEuY29sb3IgfHwgJycsXG4gICAgICAgICAgICBtZXRhZGF0YTogbWV0YWRhdGEsIFxuICAgICAgICAgICAgY3JlYXRlZDogbW9tZW50Lm5vdygpLFxuICAgICAgICAgICAgdXBkYXRlZDogbW9tZW50Lm5vdygpXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5waG9uZXMucHVzaChwaG9uZSk7XG4gICAgICAgIHJldHVybiBwaG9uZTtcbiAgICB9XG5cbiAgICBmaW5kT25lKGlkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBob25lcy5maW5kKHBob25lID0+IHBob25lLmlkID09PSBpZCk7XG4gICAgfVxuXG4gICAgZmluZEFsbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGhvbmVzO1xuICAgIH1cblxuICAgIHVwZGF0ZShpZCwgZGF0YSwgbWV0YWRhdGEpIHtcbiAgICAgICAgY29uc3QgcGhvbmUgPSB0aGlzLmZpbmRPbmUoaWQpO1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMucGhvbmVzLmluZGV4T2YocGhvbmUpO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5waG9uZXNbaW5kZXhdLnR5cGUgPSBkYXRhLnR5cGUgfHwgcGhvbmUudHlwZTtcbiAgICAgICAgdGhpcy5waG9uZXNbaW5kZXhdLnNlcmlhbCA9IGRhdGEuc2VyaWFsIHx8IHBob25lLnNlcmlhbDtcbiAgICAgICAgdGhpcy5waG9uZXNbaW5kZXhdLmNvbG9yID0gZGF0YS5jb2xvciB8fCBwaG9uZS5jb2xvcjtcbiAgICAgICAgdGhpcy5waG9uZXNbaW5kZXhdLm1ldGFkYXRhID0gbWV0YWRhdGE7XG4gICAgICAgIHRoaXMucGhvbmVzW2luZGV4XS51cGRhdGVkID0gbW9tZW50Lm5vdygpO1xuXG4gICAgICAgIHJldHVybiB0aGlzLnBob25lc1tpbmRleF07XG4gICAgfVxuXG4gICAgZGVsZXRlKGlkKSB7XG4gICAgICAgIGNvbnN0IHBob25lID0gdGhpcy5maW5kT25lKGlkKTtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnBob25lcy5pbmRleE9mKHBob25lKTtcbiAgICAgICAgdGhpcy5waG9uZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgUGhvbmUoKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Phone.js"
      ],
      "names": [
        "Phone",
        "phones",
        "data",
        "metadata",
        "phone",
        "id",
        "uuid",
        "v4",
        "type",
        "serial",
        "color",
        "created",
        "moment",
        "now",
        "updated",
        "push",
        "find",
        "findOne",
        "index",
        "indexOf",
        "splice"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AACA;;IAEMA,K;;;AAEF,mBAAc;AAAA;AACV,SAAKC,MAAL,GAAc,EAAd;AACH;;;;2BAEMC,I,EAAMC,Q,EAAU;AACnB,UAAMC,KAAK,GAAG;AACVC,QAAAA,EAAE,EAAEC,iBAAKC,EAAL,EADM;AAEVC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAAL,IAAa,EAFT;AAGVC,QAAAA,MAAM,EAAEP,IAAI,CAACO,MAAL,IAAe,EAHb;AAIVC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAAL,IAAc,EAJX;AAKVP,QAAAA,QAAQ,EAAEA,QALA;AAMVQ,QAAAA,OAAO,EAAEC,mBAAOC,GAAP,EANC;AAOVC,QAAAA,OAAO,EAAEF,mBAAOC,GAAP;AAPC,OAAd;AAUA,WAAKZ,MAAL,CAAYc,IAAZ,CAAiBX,KAAjB;AACA,aAAOA,KAAP;AACH;;;4BAEOC,E,EAAI;AACR,aAAO,KAAKJ,MAAL,CAAYe,IAAZ,CAAiB,UAAAZ,KAAK;AAAA,eAAIA,KAAK,CAACC,EAAN,KAAaA,EAAjB;AAAA,OAAtB,CAAP;AACH;;;8BAES;AACN,aAAO,KAAKJ,MAAZ;AACH;;;2BAEMI,E,EAAIH,I,EAAMC,Q,EAAU;AACvB,UAAMC,KAAK,GAAG,KAAKa,OAAL,CAAaZ,EAAb,CAAd;AACA,UAAMa,KAAK,GAAG,KAAKjB,MAAL,CAAYkB,OAAZ,CAAoBf,KAApB,CAAd;AAEA,WAAKH,MAAL,CAAYiB,KAAZ,EAAmBV,IAAnB,GAA0BN,IAAI,CAACM,IAAL,IAAaJ,KAAK,CAACI,IAA7C;AACA,WAAKP,MAAL,CAAYiB,KAAZ,EAAmBT,MAAnB,GAA4BP,IAAI,CAACO,MAAL,IAAeL,KAAK,CAACK,MAAjD;AACA,WAAKR,MAAL,CAAYiB,KAAZ,EAAmBR,KAAnB,GAA2BR,IAAI,CAACQ,KAAL,IAAcN,KAAK,CAACM,KAA/C;AACA,WAAKT,MAAL,CAAYiB,KAAZ,EAAmBf,QAAnB,GAA8BA,QAA9B;AACA,WAAKF,MAAL,CAAYiB,KAAZ,EAAmBJ,OAAnB,GAA6BF,mBAAOC,GAAP,EAA7B;AAEA,aAAO,KAAKZ,MAAL,CAAYiB,KAAZ,CAAP;AACH;;;4BAEMb,E,EAAI;AACP,UAAMD,KAAK,GAAG,KAAKa,OAAL,CAAaZ,EAAb,CAAd;AACA,UAAMa,KAAK,GAAG,KAAKjB,MAAL,CAAYkB,OAAZ,CAAoBf,KAApB,CAAd;AACA,WAAKH,MAAL,CAAYmB,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACA,aAAO,EAAP;AACH;;;;;eAIU,IAAIlB,KAAJ,E",
      "sourceRoot": "/Users/teodora/Desktop/nodejs/models",
      "sourcesContent": [
        "import moment from 'moment';\nimport uuid from 'uuid';\nimport parser from './../util'\n\nclass Phone {\n\n    constructor() {\n        this.phones = [];\n    }\n\n    create(data, metadata) {\n        const phone = {\n            id: uuid.v4(), \n            type: data.type || '',\n            serial: data.serial || '',\n            color: data.color || '',\n            metadata: metadata, \n            created: moment.now(),\n            updated: moment.now()\n        };\n\n        this.phones.push(phone);\n        return phone;\n    }\n\n    findOne(id) {\n        return this.phones.find(phone => phone.id === id);\n    }\n\n    findAll() {\n        return this.phones;\n    }\n\n    update(id, data, metadata) {\n        const phone = this.findOne(id);\n        const index = this.phones.indexOf(phone);\n        \n        this.phones[index].type = data.type || phone.type;\n        this.phones[index].serial = data.serial || phone.serial;\n        this.phones[index].color = data.color || phone.color;\n        this.phones[index].metadata = metadata;\n        this.phones[index].updated = moment.now();\n\n        return this.phones[index];\n    }\n\n    delete(id) {\n        const phone = this.findOne(id);\n        const index = this.phones.indexOf(phone);\n        this.phones.splice(index, 1);\n        return {};\n    }\n\n}\n\nexport default new Phone();"
      ]
    },
    "sourceType": "script",
    "mtime": 1567163450425
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/util/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/util/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/util/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/util/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs/util",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hash = hash;\nexports.unhash = unhash;\n\nvar _objectHash = _interopRequireDefault(require(\"object-hash\"));\n\nvar _simpleEncryptor = _interopRequireDefault(require(\"simple-encryptor\"));\n\nvar key = 'real secret keys should be long and random';\nvar encryptor = (0, _simpleEncryptor[\"default\"])(key);\n\nfunction hash(data) {\n  var metadata = '';\n\n  try {\n    metadata = JSON.parse(data);\n    metadata = encryptor.encrypt(metadata);\n  } catch (error) {\n    return false;\n  }\n\n  return metadata;\n}\n\nfunction unhash(metadata) {\n  var data = {};\n\n  try {\n    data = encryptor.decrypt(metadata);\n  } catch (error) {\n    return false;\n  }\n\n  return data;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImtleSIsImVuY3J5cHRvciIsImhhc2giLCJkYXRhIiwibWV0YWRhdGEiLCJKU09OIiwicGFyc2UiLCJlbmNyeXB0IiwiZXJyb3IiLCJ1bmhhc2giLCJkZWNyeXB0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLDRDQUFaO0FBQ0EsSUFBTUMsU0FBUyxHQUFHLGlDQUFnQkQsR0FBaEIsQ0FBbEI7O0FBRU8sU0FBU0UsSUFBVCxDQUFjQyxJQUFkLEVBQW9CO0FBQ3ZCLE1BQUlDLFFBQVEsR0FBRyxFQUFmOztBQUNBLE1BQUk7QUFDQUEsSUFBQUEsUUFBUSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0gsSUFBWCxDQUFYO0FBQ0FDLElBQUFBLFFBQVEsR0FBR0gsU0FBUyxDQUFDTSxPQUFWLENBQWtCSCxRQUFsQixDQUFYO0FBQ0gsR0FIRCxDQUdFLE9BQU1JLEtBQU4sRUFBYTtBQUNYLFdBQU8sS0FBUDtBQUNIOztBQUNELFNBQU9KLFFBQVA7QUFDSDs7QUFFTSxTQUFTSyxNQUFULENBQWdCTCxRQUFoQixFQUEwQjtBQUM3QixNQUFJRCxJQUFJLEdBQUcsRUFBWDs7QUFDQSxNQUFJO0FBQ0FBLElBQUFBLElBQUksR0FBR0YsU0FBUyxDQUFDUyxPQUFWLENBQWtCTixRQUFsQixDQUFQO0FBQ0gsR0FGRCxDQUVFLE9BQU1JLEtBQU4sRUFBYTtBQUNYLFdBQU8sS0FBUDtBQUNIOztBQUNELFNBQU9MLElBQVA7QUFDSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvZG9yYS9EZXNrdG9wL25vZGVqcy91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG9iamVjdEhhc2ggZnJvbSAnb2JqZWN0LWhhc2gnO1xuaW1wb3J0IHNpbXBsZUVuY3J5cHRvciBmcm9tICdzaW1wbGUtZW5jcnlwdG9yJztcblxuY29uc3Qga2V5ID0gJ3JlYWwgc2VjcmV0IGtleXMgc2hvdWxkIGJlIGxvbmcgYW5kIHJhbmRvbSc7XG5jb25zdCBlbmNyeXB0b3IgPSBzaW1wbGVFbmNyeXB0b3Ioa2V5KTtcblxuZXhwb3J0IGZ1bmN0aW9uIGhhc2goZGF0YSkge1xuICAgIGxldCBtZXRhZGF0YSA9ICcnXG4gICAgdHJ5IHtcbiAgICAgICAgbWV0YWRhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgICBtZXRhZGF0YSA9IGVuY3J5cHRvci5lbmNyeXB0KG1ldGFkYXRhKTtcbiAgICB9IGNhdGNoKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIG1ldGFkYXRhO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdW5oYXNoKG1ldGFkYXRhKSB7XG4gICAgbGV0IGRhdGEgPSB7fTtcbiAgICB0cnkge1xuICAgICAgICBkYXRhID0gZW5jcnlwdG9yLmRlY3J5cHQobWV0YWRhdGEpO1xuICAgIH0gY2F0Y2goZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "key",
        "encryptor",
        "hash",
        "data",
        "metadata",
        "JSON",
        "parse",
        "encrypt",
        "error",
        "unhash",
        "decrypt"
      ],
      "mappings": ";;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,GAAG,GAAG,4CAAZ;AACA,IAAMC,SAAS,GAAG,iCAAgBD,GAAhB,CAAlB;;AAEO,SAASE,IAAT,CAAcC,IAAd,EAAoB;AACvB,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAI;AACAA,IAAAA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAX;AACAC,IAAAA,QAAQ,GAAGH,SAAS,CAACM,OAAV,CAAkBH,QAAlB,CAAX;AACH,GAHD,CAGE,OAAMI,KAAN,EAAa;AACX,WAAO,KAAP;AACH;;AACD,SAAOJ,QAAP;AACH;;AAEM,SAASK,MAAT,CAAgBL,QAAhB,EAA0B;AAC7B,MAAID,IAAI,GAAG,EAAX;;AACA,MAAI;AACAA,IAAAA,IAAI,GAAGF,SAAS,CAACS,OAAV,CAAkBN,QAAlB,CAAP;AACH,GAFD,CAEE,OAAMI,KAAN,EAAa;AACX,WAAO,KAAP;AACH;;AACD,SAAOL,IAAP;AACH",
      "sourceRoot": "/Users/teodora/Desktop/nodejs/util",
      "sourcesContent": [
        "import objectHash from 'object-hash';\nimport simpleEncryptor from 'simple-encryptor';\n\nconst key = 'real secret keys should be long and random';\nconst encryptor = simpleEncryptor(key);\n\nexport function hash(data) {\n    let metadata = ''\n    try {\n        metadata = JSON.parse(data);\n        metadata = encryptor.encrypt(metadata);\n    } catch(error) {\n        return false;\n    }\n    return metadata;\n}\n\nexport function unhash(metadata) {\n    let data = {};\n    try {\n        data = encryptor.decrypt(metadata);\n    } catch(error) {\n        return false;\n    }\n    return data;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1567163879058
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/controllers/Phone.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/controllers/Phone.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/controllers/Phone.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/controllers/Phone.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
        "sourceFileName": "Phone.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _Phone = _interopRequireDefault(require(\"../models/Phone\"));\n\nvar _util = require(\"../util\");\n\nvar Phone = {\n  create: function () {\n    var _create = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee(req, res, next) {\n      var metadata, phone;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              metadata = '';\n\n              if (!req.body.proprietary) {\n                _context.next = 6;\n                break;\n              }\n\n              metadata = (0, _util.hash)(req.body.proprietary);\n\n              if (metadata) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'Unprocessable entity'\n              }));\n\n            case 6:\n              _context.next = 8;\n              return _Phone[\"default\"].create(req.body, metadata);\n\n            case 8:\n              phone = _context.sent;\n              res.status(201).send(phone);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              next(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    function create(_x, _x2, _x3) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  getAll: function () {\n    var _getAll = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee2(req, res, next) {\n      var phones;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _Phone[\"default\"].findAll();\n\n            case 3:\n              phones = _context2.sent;\n              res.status(200).send(phones);\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              next(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    function getAll(_x4, _x5, _x6) {\n      return _getAll.apply(this, arguments);\n    }\n\n    return getAll;\n  }(),\n  update: function () {\n    var _update = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee3(req, res, next) {\n      var id, phone, metadata, updatedPhone;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              id = req.params.id;\n              _context3.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context3.sent;\n\n              if (phone) {\n                _context3.next = 7;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.status(404).send({\n                'message': 'Phone not found'\n              }));\n\n            case 7:\n              metadata = phone.metadata;\n\n              if (!req.body.proprietary) {\n                _context3.next = 12;\n                break;\n              }\n\n              metadata = (0, _util.hash)(req.body.proprietary);\n\n              if (metadata) {\n                _context3.next = 12;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.status(400).send({\n                'message': 'Unprocessable entity'\n              }));\n\n            case 12:\n              _context3.next = 14;\n              return _Phone[\"default\"].update(id, req.body, metadata);\n\n            case 14:\n              updatedPhone = _context3.sent;\n              res.status(200).send(updatedPhone);\n              _context3.next = 22;\n              break;\n\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              next(_context3.t0);\n\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 18]]);\n    }));\n\n    function update(_x7, _x8, _x9) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }(),\n  \"delete\": function () {\n    var _delete2 = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee4(req, res, next) {\n      var id, phone, deletedPhone;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id = req.params.id;\n              _context4.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context4.sent;\n              if (!phone) res.status(404).send({\n                'message': 'Phone not found'\n              });\n              _context4.next = 8;\n              return _Phone[\"default\"][\"delete\"](id);\n\n            case 8:\n              deletedPhone = _context4.sent;\n              res.status(204).send(deletedPhone);\n              _context4.next = 15;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n              next(_context4.t0);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 12]]);\n    }));\n\n    function _delete(_x10, _x11, _x12) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  get: function () {\n    var _get = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee5(req, res, next) {\n      var id, phone;\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id = req.params.id;\n              _context5.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context5.sent;\n              if (!phone) res.status(404).send({\n                'message': 'Phone not found'\n              });\n              res.status(200).send(phone);\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              next(_context5.t0);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 9]]);\n    }));\n\n    function get(_x13, _x14, _x15) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }()\n};\nvar _default = Phone;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBob25lLmpzIl0sIm5hbWVzIjpbIlBob25lIiwiY3JlYXRlIiwicmVxIiwicmVzIiwibmV4dCIsIm1ldGFkYXRhIiwiYm9keSIsInByb3ByaWV0YXJ5Iiwic3RhdHVzIiwic2VuZCIsIlBob25lTW9kZWwiLCJwaG9uZSIsImdldEFsbCIsImZpbmRBbGwiLCJwaG9uZXMiLCJ1cGRhdGUiLCJpZCIsInBhcmFtcyIsImZpbmRPbmUiLCJ1cGRhdGVkUGhvbmUiLCJjb25zb2xlIiwibG9nIiwiZGVsZXRlZFBob25lIiwiZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsS0FBSyxHQUFHO0FBRUpDLEVBQUFBLE1BRkk7QUFBQTtBQUFBO0FBQUEsa0RBRUdDLEdBRkgsRUFFUUMsR0FGUixFQUVhQyxJQUZiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBSUVDLGNBQUFBLFFBSkYsR0FJYSxFQUpiOztBQUFBLG1CQUtFSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FMWDtBQUFBO0FBQUE7QUFBQTs7QUFNRUYsY0FBQUEsUUFBUSxHQUFHLGdCQUFLSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FBZCxDQUFYOztBQU5GLGtCQU9PRixRQVBQO0FBQUE7QUFBQTtBQUFBOztBQUFBLCtDQVFhRixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckIsQ0FSYjs7QUFBQTtBQUFBO0FBQUEscUJBVWtCQyxrQkFBV1QsTUFBWCxDQUFrQkMsR0FBRyxDQUFDSSxJQUF0QixFQUE0QkQsUUFBNUIsQ0FWbEI7O0FBQUE7QUFVSU0sY0FBQUEsS0FWSjtBQVdGUixjQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkUsS0FBckI7QUFYRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQWFGUCxjQUFBQSxJQUFJLGFBQUo7O0FBYkU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFpQkpRLEVBQUFBLE1BakJJO0FBQUE7QUFBQTtBQUFBLG1EQWlCR1YsR0FqQkgsRUFpQlFDLEdBakJSLEVBaUJhQyxJQWpCYjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBbUJtQk0sa0JBQVdHLE9BQVgsRUFuQm5COztBQUFBO0FBbUJJQyxjQUFBQSxNQW5CSjtBQW9CRlgsY0FBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJLLE1BQXJCO0FBcEJFO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBc0JGVixjQUFBQSxJQUFJLGNBQUo7O0FBdEJFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBMEJKVyxFQUFBQSxNQTFCSTtBQUFBO0FBQUE7QUFBQSxtREEwQkdiLEdBMUJILEVBMEJRQyxHQTFCUixFQTBCYUMsSUExQmI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUE0QklZLGNBQUFBLEVBNUJKLEdBNEJTZCxHQUFHLENBQUNlLE1BQUosQ0FBV0QsRUE1QnBCO0FBQUE7QUFBQSxxQkE2QmtCTixrQkFBV1EsT0FBWCxDQUFtQkYsRUFBbkIsQ0E3QmxCOztBQUFBO0FBNkJJTCxjQUFBQSxLQTdCSjs7QUFBQSxrQkE4QkdBLEtBOUJIO0FBQUE7QUFBQTtBQUFBOztBQUFBLGdEQStCU1IsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQywyQkFBVztBQUFaLGVBQXJCLENBL0JUOztBQUFBO0FBZ0NFSixjQUFBQSxRQWhDRixHQWdDYU0sS0FBSyxDQUFDTixRQWhDbkI7O0FBQUEsbUJBaUNFSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FqQ1g7QUFBQTtBQUFBO0FBQUE7O0FBa0NFRixjQUFBQSxRQUFRLEdBQUcsZ0JBQUtILEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxXQUFkLENBQVg7O0FBbENGLGtCQW1DT0YsUUFuQ1A7QUFBQTtBQUFBO0FBQUE7O0FBQUEsZ0RBb0NhRixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckIsQ0FwQ2I7O0FBQUE7QUFBQTtBQUFBLHFCQXNDeUJDLGtCQUFXSyxNQUFYLENBQWtCQyxFQUFsQixFQUFzQmQsR0FBRyxDQUFDSSxJQUExQixFQUFnQ0QsUUFBaEMsQ0F0Q3pCOztBQUFBO0FBc0NJYyxjQUFBQSxZQXRDSjtBQXVDRmhCLGNBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCVSxZQUFyQjtBQXZDRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXlDRkMsY0FBQUEsT0FBTyxDQUFDQyxHQUFSO0FBQ0FqQixjQUFBQSxJQUFJLGNBQUo7O0FBMUNFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbURBOENHRixHQTlDSCxFQThDUUMsR0E5Q1IsRUE4Q2FDLElBOUNiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBZ0RJWSxjQUFBQSxFQWhESixHQWdEU2QsR0FBRyxDQUFDZSxNQUFKLENBQVdELEVBaERwQjtBQUFBO0FBQUEscUJBaURrQk4sa0JBQVdRLE9BQVgsQ0FBbUJGLEVBQW5CLENBakRsQjs7QUFBQTtBQWlESUwsY0FBQUEsS0FqREo7QUFrREYsa0JBQUksQ0FBQ0EsS0FBTCxFQUNJUixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckI7QUFuREY7QUFBQSxxQkFvRHlCQyw0QkFBa0JNLEVBQWxCLENBcER6Qjs7QUFBQTtBQW9ESU0sY0FBQUEsWUFwREo7QUFxREZuQixjQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQmEsWUFBckI7QUFyREU7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUF3REZsQixjQUFBQSxJQUFJLGNBQUo7O0FBeERFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBNERKbUIsRUFBQUEsR0E1REk7QUFBQTtBQUFBO0FBQUEsbURBNERBckIsR0E1REEsRUE0REtDLEdBNURMLEVBNERVQyxJQTVEVjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQThESVksY0FBQUEsRUE5REosR0E4RFNkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXRCxFQTlEcEI7QUFBQTtBQUFBLHFCQStEa0JOLGtCQUFXUSxPQUFYLENBQW1CRixFQUFuQixDQS9EbEI7O0FBQUE7QUErRElMLGNBQUFBLEtBL0RKO0FBZ0VGLGtCQUFJLENBQUNBLEtBQUwsRUFDSVIsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQywyQkFBVztBQUFaLGVBQXJCO0FBQ0pOLGNBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRSxLQUFyQjtBQWxFRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXFFRlAsY0FBQUEsSUFBSSxjQUFKOztBQXJFRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLENBQWQ7ZUEyRWVKLEsiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlb2RvcmEvRGVza3RvcC9ub2RlanMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGhvbmVNb2RlbCBmcm9tICcuLi9tb2RlbHMvUGhvbmUnO1xuaW1wb3J0IHtoYXNoLCB1bmhhc2h9IGZyb20gJy4uL3V0aWwnO1xuXG5jb25zdCBQaG9uZSA9IHtcblxuICAgIGFzeW5jIGNyZWF0ZShyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgbGV0IG1ldGFkYXRhID0gJydcbiAgICAgICAgICAgIGlmIChyZXEuYm9keS5wcm9wcmlldGFyeSkge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhID0gaGFzaChyZXEuYm9keS5wcm9wcmlldGFyeSk7XG4gICAgICAgICAgICAgICAgaWYgKCFtZXRhZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsnbWVzc2FnZSc6ICdVbnByb2Nlc3NhYmxlIGVudGl0eSd9KVxuICAgICAgICAgICAgfSAgICBcbiAgICAgICAgICAgIGNvbnN0IHBob25lID0gYXdhaXQgUGhvbmVNb2RlbC5jcmVhdGUocmVxLmJvZHksIG1ldGFkYXRhKTtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKHBob25lKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIG5leHQoZXJyb3IpXG4gICAgICAgIH0gXG4gICAgfSxcblxuICAgIGFzeW5jIGdldEFsbChyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcGhvbmVzID0gYXdhaXQgUGhvbmVNb2RlbC5maW5kQWxsKCk7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChwaG9uZXMpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYXN5bmMgdXBkYXRlKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHJlcS5wYXJhbXMuaWQ7XG4gICAgICAgICAgICBjb25zdCBwaG9uZSA9IGF3YWl0IFBob25lTW9kZWwuZmluZE9uZShpZCk7XG4gICAgICAgICAgICBpZiAoIXBob25lKVxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuc2VuZCh7J21lc3NhZ2UnOiAnUGhvbmUgbm90IGZvdW5kJ30pXG4gICAgICAgICAgICBsZXQgbWV0YWRhdGEgPSBwaG9uZS5tZXRhZGF0YTtcbiAgICAgICAgICAgIGlmIChyZXEuYm9keS5wcm9wcmlldGFyeSkge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhID0gaGFzaChyZXEuYm9keS5wcm9wcmlldGFyeSk7XG4gICAgICAgICAgICAgICAgaWYgKCFtZXRhZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsnbWVzc2FnZSc6ICdVbnByb2Nlc3NhYmxlIGVudGl0eSd9KVxuICAgICAgICAgICAgfSAgICBcbiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZWRQaG9uZSA9IGF3YWl0IFBob25lTW9kZWwudXBkYXRlKGlkLCByZXEuYm9keSwgbWV0YWRhdGEpO1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQodXBkYXRlZFBob25lKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKVxuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9LCBcblxuICAgIGFzeW5jIGRlbGV0ZShyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgaWQgPSByZXEucGFyYW1zLmlkO1xuICAgICAgICAgICAgY29uc3QgcGhvbmUgPSBhd2FpdCBQaG9uZU1vZGVsLmZpbmRPbmUoaWQpO1xuICAgICAgICAgICAgaWYgKCFwaG9uZSlcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwNCkuc2VuZCh7J21lc3NhZ2UnOiAnUGhvbmUgbm90IGZvdW5kJ30pXG4gICAgICAgICAgICBjb25zdCBkZWxldGVkUGhvbmUgPSBhd2FpdCBQaG9uZU1vZGVsLmRlbGV0ZShpZCk7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwNCkuc2VuZChkZWxldGVkUGhvbmUpXG4gICAgICAgICAgICBcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIG5leHQoZXJyb3IpXG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYXN5bmMgZ2V0KHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHJlcS5wYXJhbXMuaWQ7XG4gICAgICAgICAgICBjb25zdCBwaG9uZSA9IGF3YWl0IFBob25lTW9kZWwuZmluZE9uZShpZCk7XG4gICAgICAgICAgICBpZiAoIXBob25lKVxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKHsnbWVzc2FnZSc6ICdQaG9uZSBub3QgZm91bmQnfSlcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHBob25lKVxuXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBuZXh0KGVycm9yKVxuICAgICAgICB9XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFBob25lOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Phone.js"
      ],
      "names": [
        "Phone",
        "create",
        "req",
        "res",
        "next",
        "metadata",
        "body",
        "proprietary",
        "status",
        "send",
        "PhoneModel",
        "phone",
        "getAll",
        "findAll",
        "phones",
        "update",
        "id",
        "params",
        "findOne",
        "updatedPhone",
        "console",
        "log",
        "deletedPhone",
        "get"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,KAAK,GAAG;AAEJC,EAAAA,MAFI;AAAA;AAAA;AAAA,kDAEGC,GAFH,EAEQC,GAFR,EAEaC,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIEC,cAAAA,QAJF,GAIa,EAJb;;AAAA,mBAKEH,GAAG,CAACI,IAAJ,CAASC,WALX;AAAA;AAAA;AAAA;;AAMEF,cAAAA,QAAQ,GAAG,gBAAKH,GAAG,CAACI,IAAJ,CAASC,WAAd,CAAX;;AANF,kBAOOF,QAPP;AAAA;AAAA;AAAA;;AAAA,+CAQaF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CARb;;AAAA;AAAA;AAAA,qBAUkBC,kBAAWT,MAAX,CAAkBC,GAAG,CAACI,IAAtB,EAA4BD,QAA5B,CAVlB;;AAAA;AAUIM,cAAAA,KAVJ;AAWFR,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,KAArB;AAXE;AAAA;;AAAA;AAAA;AAAA;AAaFP,cAAAA,IAAI,aAAJ;;AAbE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiBJQ,EAAAA,MAjBI;AAAA;AAAA;AAAA,mDAiBGV,GAjBH,EAiBQC,GAjBR,EAiBaC,IAjBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAmBmBM,kBAAWG,OAAX,EAnBnB;;AAAA;AAmBIC,cAAAA,MAnBJ;AAoBFX,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,MAArB;AApBE;AAAA;;AAAA;AAAA;AAAA;AAsBFV,cAAAA,IAAI,cAAJ;;AAtBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0BJW,EAAAA,MA1BI;AAAA;AAAA;AAAA,mDA0BGb,GA1BH,EA0BQC,GA1BR,EA0BaC,IA1Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BIY,cAAAA,EA5BJ,GA4BSd,GAAG,CAACe,MAAJ,CAAWD,EA5BpB;AAAA;AAAA,qBA6BkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CA7BlB;;AAAA;AA6BIL,cAAAA,KA7BJ;;AAAA,kBA8BGA,KA9BH;AAAA;AAAA;AAAA;;AAAA,gDA+BSR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CA/BT;;AAAA;AAgCEJ,cAAAA,QAhCF,GAgCaM,KAAK,CAACN,QAhCnB;;AAAA,mBAiCEH,GAAG,CAACI,IAAJ,CAASC,WAjCX;AAAA;AAAA;AAAA;;AAkCEF,cAAAA,QAAQ,GAAG,gBAAKH,GAAG,CAACI,IAAJ,CAASC,WAAd,CAAX;;AAlCF,kBAmCOF,QAnCP;AAAA;AAAA;AAAA;;AAAA,gDAoCaF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CApCb;;AAAA;AAAA;AAAA,qBAsCyBC,kBAAWK,MAAX,CAAkBC,EAAlB,EAAsBd,GAAG,CAACI,IAA1B,EAAgCD,QAAhC,CAtCzB;;AAAA;AAsCIc,cAAAA,YAtCJ;AAuCFhB,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,YAArB;AAvCE;AAAA;;AAAA;AAAA;AAAA;AAyCFC,cAAAA,OAAO,CAACC,GAAR;AACAjB,cAAAA,IAAI,cAAJ;;AA1CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDA8CGF,GA9CH,EA8CQC,GA9CR,EA8CaC,IA9Cb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDIY,cAAAA,EAhDJ,GAgDSd,GAAG,CAACe,MAAJ,CAAWD,EAhDpB;AAAA;AAAA,qBAiDkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CAjDlB;;AAAA;AAiDIL,cAAAA,KAjDJ;AAkDF,kBAAI,CAACA,KAAL,EACIR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB;AAnDF;AAAA,qBAoDyBC,4BAAkBM,EAAlB,CApDzB;;AAAA;AAoDIM,cAAAA,YApDJ;AAqDFnB,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,YAArB;AArDE;AAAA;;AAAA;AAAA;AAAA;AAwDFlB,cAAAA,IAAI,cAAJ;;AAxDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4DJmB,EAAAA,GA5DI;AAAA;AAAA;AAAA,mDA4DArB,GA5DA,EA4DKC,GA5DL,EA4DUC,IA5DV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8DIY,cAAAA,EA9DJ,GA8DSd,GAAG,CAACe,MAAJ,CAAWD,EA9DpB;AAAA;AAAA,qBA+DkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CA/DlB;;AAAA;AA+DIL,cAAAA,KA/DJ;AAgEF,kBAAI,CAACA,KAAL,EACIR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB;AACJN,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,KAArB;AAlEE;AAAA;;AAAA;AAAA;AAAA;AAqEFP,cAAAA,IAAI,cAAJ;;AArEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAd;eA2EeJ,K",
      "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
      "sourcesContent": [
        "import PhoneModel from '../models/Phone';\nimport {hash, unhash} from '../util';\n\nconst Phone = {\n\n    async create(req, res, next) {\n        try {\n            let metadata = ''\n            if (req.body.proprietary) {\n                metadata = hash(req.body.proprietary);\n                if (!metadata)\n                    return res.status(400).send({'message': 'Unprocessable entity'})\n            }    \n            const phone = await PhoneModel.create(req.body, metadata);\n            res.status(201).send(phone);\n        } catch (error) {\n            next(error)\n        } \n    },\n\n    async getAll(req, res, next) {\n        try {\n            const phones = await PhoneModel.findAll();\n            res.status(200).send(phones);\n        } catch (error) {\n            next(error);\n        }\n    },\n\n    async update(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                return res.status(404).send({'message': 'Phone not found'})\n            let metadata = phone.metadata;\n            if (req.body.proprietary) {\n                metadata = hash(req.body.proprietary);\n                if (!metadata)\n                    return res.status(400).send({'message': 'Unprocessable entity'})\n            }    \n            const updatedPhone = await PhoneModel.update(id, req.body, metadata);\n            res.status(200).send(updatedPhone);\n        } catch (error) {\n            console.log(error)\n            next(error);\n        }\n    }, \n\n    async delete(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                res.status(404).send({'message': 'Phone not found'})\n            const deletedPhone = await PhoneModel.delete(id);\n            res.status(204).send(deletedPhone)\n            \n        } catch (error) {\n            next(error)\n        }\n    },\n\n    async get(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                res.status(404).send({'message': 'Phone not found'})\n            res.status(200).send(phone)\n\n        } catch (error) {\n            next(error)\n        }\n    }\n\n}\n\nexport default Phone;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567170199422
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/test/index.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/test/index.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/test/index.spec.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/test/index.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs/test",
        "sourceFileName": "index.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar request = require('supertest');\n\nvar app = require('../app');\n\ndescribe('GET /api/phones', function () {\n  it('respond with json containing a list of all phones', function (done) {\n    request(app).get('/api/phones').set('Accept', 'application/json').expect('Content-Type', /json/).expect(200, done);\n  });\n});\ndescribe('POST /api/phones', function () {\n  var data = {\n    \"type\": \"mobile\",\n    \"serial\": \"serialno\",\n    \"color\": \"black\",\n    \"property\": \"{'owner':'owner name'}\"\n  };\n  it('respond with 201 created', function (done) {\n    request(app).post('/api/phones').send(data).set('Accept', 'application/json').expect('Content-Type', /json/).expect(201).end(function (err) {\n      if (err) return done(err);\n      done();\n    });\n  });\n});\ndescribe('POST /api/phones', function () {\n  var data = {\n    \"type\": \"mobile\",\n    \"serial\": \"serialno\",\n    \"color\": \"black\",\n    \"proprietary\": \"{'owner':owner name'}\"\n  };\n  it('respond with Unprocessable entity', function (done) {\n    request(app).post('/api/phones').send(data).set('Accept', 'application/json').expect('Content-Type', /json/).expect(400).end(function (err) {\n      if (err) return done(err);\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnNwZWMuanMiXSwibmFtZXMiOlsicmVxdWVzdCIsInJlcXVpcmUiLCJhcHAiLCJkZXNjcmliZSIsIml0IiwiZG9uZSIsImdldCIsInNldCIsImV4cGVjdCIsImRhdGEiLCJwb3N0Iiwic2VuZCIsImVuZCIsImVyciJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLElBQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBbkI7O0FBRUFFLFFBQVEsQ0FBQyxpQkFBRCxFQUFvQixZQUFZO0FBQ3BDQyxFQUFBQSxFQUFFLENBQUMsbURBQUQsRUFBc0QsVUFBVUMsSUFBVixFQUFnQjtBQUNwRUwsSUFBQUEsT0FBTyxDQUFDRSxHQUFELENBQVAsQ0FDS0ksR0FETCxDQUNTLGFBRFQsRUFFS0MsR0FGTCxDQUVTLFFBRlQsRUFFbUIsa0JBRm5CLEVBR0tDLE1BSEwsQ0FHWSxjQUhaLEVBRzRCLE1BSDVCLEVBSUtBLE1BSkwsQ0FJWSxHQUpaLEVBSWlCSCxJQUpqQjtBQUtILEdBTkMsQ0FBRjtBQU9ILENBUk8sQ0FBUjtBQVVBRixRQUFRLENBQUMsa0JBQUQsRUFBcUIsWUFBWTtBQUNyQyxNQUFJTSxJQUFJLEdBQUc7QUFDUCxZQUFRLFFBREQ7QUFFUCxjQUFVLFVBRkg7QUFHUCxhQUFTLE9BSEY7QUFJUCxnQkFBWTtBQUpMLEdBQVg7QUFNQUwsRUFBQUEsRUFBRSxDQUFDLDBCQUFELEVBQTZCLFVBQVVDLElBQVYsRUFBZ0I7QUFDM0NMLElBQUFBLE9BQU8sQ0FBQ0UsR0FBRCxDQUFQLENBQ0tRLElBREwsQ0FDVSxhQURWLEVBRUtDLElBRkwsQ0FFVUYsSUFGVixFQUdLRixHQUhMLENBR1MsUUFIVCxFQUdtQixrQkFIbkIsRUFJS0MsTUFKTCxDQUlZLGNBSlosRUFJNEIsTUFKNUIsRUFLS0EsTUFMTCxDQUtZLEdBTFosRUFNS0ksR0FOTCxDQU1TLFVBQUNDLEdBQUQsRUFBUztBQUNWLFVBQUlBLEdBQUosRUFBUyxPQUFPUixJQUFJLENBQUNRLEdBQUQsQ0FBWDtBQUNUUixNQUFBQSxJQUFJO0FBQ1AsS0FUTDtBQVVILEdBWEMsQ0FBRjtBQVlILENBbkJPLENBQVI7QUFxQkFGLFFBQVEsQ0FBQyxrQkFBRCxFQUFxQixZQUFZO0FBQ3JDLE1BQUlNLElBQUksR0FBRztBQUNQLFlBQVEsUUFERDtBQUVQLGNBQVUsVUFGSDtBQUdQLGFBQVMsT0FIRjtBQUlQLG1CQUFlO0FBSlIsR0FBWDtBQU1BTCxFQUFBQSxFQUFFLENBQUMsbUNBQUQsRUFBc0MsVUFBVUMsSUFBVixFQUFnQjtBQUNwREwsSUFBQUEsT0FBTyxDQUFDRSxHQUFELENBQVAsQ0FDS1EsSUFETCxDQUNVLGFBRFYsRUFFS0MsSUFGTCxDQUVVRixJQUZWLEVBR0tGLEdBSEwsQ0FHUyxRQUhULEVBR21CLGtCQUhuQixFQUlLQyxNQUpMLENBSVksY0FKWixFQUk0QixNQUo1QixFQUtLQSxNQUxMLENBS1ksR0FMWixFQU1LSSxHQU5MLENBTVMsVUFBQ0MsR0FBRCxFQUFTO0FBQ1YsVUFBSUEsR0FBSixFQUFTLE9BQU9SLElBQUksQ0FBQ1EsR0FBRCxDQUFYO0FBQ1RSLE1BQUFBLElBQUk7QUFDUCxLQVRMO0FBVUgsR0FYQyxDQUFGO0FBWUgsQ0FuQk8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvZG9yYS9EZXNrdG9wL25vZGVqcy90ZXN0Iiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcmVxdWVzdCA9IHJlcXVpcmUoJ3N1cGVydGVzdCcpO1xuY29uc3QgYXBwID0gcmVxdWlyZSgnLi4vYXBwJyk7XG5cbmRlc2NyaWJlKCdHRVQgL2FwaS9waG9uZXMnLCBmdW5jdGlvbiAoKSB7XG4gICAgaXQoJ3Jlc3BvbmQgd2l0aCBqc29uIGNvbnRhaW5pbmcgYSBsaXN0IG9mIGFsbCBwaG9uZXMnLCBmdW5jdGlvbiAoZG9uZSkge1xuICAgICAgICByZXF1ZXN0KGFwcClcbiAgICAgICAgICAgIC5nZXQoJy9hcGkvcGhvbmVzJylcbiAgICAgICAgICAgIC5zZXQoJ0FjY2VwdCcsICdhcHBsaWNhdGlvbi9qc29uJylcbiAgICAgICAgICAgIC5leHBlY3QoJ0NvbnRlbnQtVHlwZScsIC9qc29uLylcbiAgICAgICAgICAgIC5leHBlY3QoMjAwLCBkb25lKTtcbiAgICB9KTtcbn0pO1xuXG5kZXNjcmliZSgnUE9TVCAvYXBpL3Bob25lcycsIGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgZGF0YSA9IHtcbiAgICAgICAgXCJ0eXBlXCI6IFwibW9iaWxlXCIsXG4gICAgICAgIFwic2VyaWFsXCI6IFwic2VyaWFsbm9cIixcbiAgICAgICAgXCJjb2xvclwiOiBcImJsYWNrXCIsXG4gICAgICAgIFwicHJvcGVydHlcIjogXCJ7J293bmVyJzonb3duZXIgbmFtZSd9XCJcbiAgICB9XG4gICAgaXQoJ3Jlc3BvbmQgd2l0aCAyMDEgY3JlYXRlZCcsIGZ1bmN0aW9uIChkb25lKSB7XG4gICAgICAgIHJlcXVlc3QoYXBwKVxuICAgICAgICAgICAgLnBvc3QoJy9hcGkvcGhvbmVzJylcbiAgICAgICAgICAgIC5zZW5kKGRhdGEpXG4gICAgICAgICAgICAuc2V0KCdBY2NlcHQnLCAnYXBwbGljYXRpb24vanNvbicpXG4gICAgICAgICAgICAuZXhwZWN0KCdDb250ZW50LVR5cGUnLCAvanNvbi8pXG4gICAgICAgICAgICAuZXhwZWN0KDIwMSlcbiAgICAgICAgICAgIC5lbmQoKGVycikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHJldHVybiBkb25lKGVycik7XG4gICAgICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgfSk7XG59KTtcblxuZGVzY3JpYmUoJ1BPU1QgL2FwaS9waG9uZXMnLCBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IGRhdGEgPSB7XG4gICAgICAgIFwidHlwZVwiOiBcIm1vYmlsZVwiLFxuICAgICAgICBcInNlcmlhbFwiOiBcInNlcmlhbG5vXCIsXG4gICAgICAgIFwiY29sb3JcIjogXCJibGFja1wiLFxuICAgICAgICBcInByb3ByaWV0YXJ5XCI6IFwieydvd25lcic6b3duZXIgbmFtZSd9XCJcbiAgICB9O1xuICAgIGl0KCdyZXNwb25kIHdpdGggVW5wcm9jZXNzYWJsZSBlbnRpdHknLCBmdW5jdGlvbiAoZG9uZSkge1xuICAgICAgICByZXF1ZXN0KGFwcClcbiAgICAgICAgICAgIC5wb3N0KCcvYXBpL3Bob25lcycpXG4gICAgICAgICAgICAuc2VuZChkYXRhKVxuICAgICAgICAgICAgLnNldCgnQWNjZXB0JywgJ2FwcGxpY2F0aW9uL2pzb24nKVxuICAgICAgICAgICAgLmV4cGVjdCgnQ29udGVudC1UeXBlJywgL2pzb24vKVxuICAgICAgICAgICAgLmV4cGVjdCg0MDApXG4gICAgICAgICAgICAuZW5kKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gZG9uZShlcnIpO1xuICAgICAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH0pO1xufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.spec.js"
      ],
      "names": [
        "request",
        "require",
        "app",
        "describe",
        "it",
        "done",
        "get",
        "set",
        "expect",
        "data",
        "post",
        "send",
        "end",
        "err"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEAE,QAAQ,CAAC,iBAAD,EAAoB,YAAY;AACpCC,EAAAA,EAAE,CAAC,mDAAD,EAAsD,UAAUC,IAAV,EAAgB;AACpEL,IAAAA,OAAO,CAACE,GAAD,CAAP,CACKI,GADL,CACS,aADT,EAEKC,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKC,MAHL,CAGY,cAHZ,EAG4B,MAH5B,EAIKA,MAJL,CAIY,GAJZ,EAIiBH,IAJjB;AAKH,GANC,CAAF;AAOH,CARO,CAAR;AAUAF,QAAQ,CAAC,kBAAD,EAAqB,YAAY;AACrC,MAAIM,IAAI,GAAG;AACP,YAAQ,QADD;AAEP,cAAU,UAFH;AAGP,aAAS,OAHF;AAIP,gBAAY;AAJL,GAAX;AAMAL,EAAAA,EAAE,CAAC,0BAAD,EAA6B,UAAUC,IAAV,EAAgB;AAC3CL,IAAAA,OAAO,CAACE,GAAD,CAAP,CACKQ,IADL,CACU,aADV,EAEKC,IAFL,CAEUF,IAFV,EAGKF,GAHL,CAGS,QAHT,EAGmB,kBAHnB,EAIKC,MAJL,CAIY,cAJZ,EAI4B,MAJ5B,EAKKA,MALL,CAKY,GALZ,EAMKI,GANL,CAMS,UAACC,GAAD,EAAS;AACV,UAAIA,GAAJ,EAAS,OAAOR,IAAI,CAACQ,GAAD,CAAX;AACTR,MAAAA,IAAI;AACP,KATL;AAUH,GAXC,CAAF;AAYH,CAnBO,CAAR;AAqBAF,QAAQ,CAAC,kBAAD,EAAqB,YAAY;AACrC,MAAIM,IAAI,GAAG;AACP,YAAQ,QADD;AAEP,cAAU,UAFH;AAGP,aAAS,OAHF;AAIP,mBAAe;AAJR,GAAX;AAMAL,EAAAA,EAAE,CAAC,mCAAD,EAAsC,UAAUC,IAAV,EAAgB;AACpDL,IAAAA,OAAO,CAACE,GAAD,CAAP,CACKQ,IADL,CACU,aADV,EAEKC,IAFL,CAEUF,IAFV,EAGKF,GAHL,CAGS,QAHT,EAGmB,kBAHnB,EAIKC,MAJL,CAIY,cAJZ,EAI4B,MAJ5B,EAKKA,MALL,CAKY,GALZ,EAMKI,GANL,CAMS,UAACC,GAAD,EAAS;AACV,UAAIA,GAAJ,EAAS,OAAOR,IAAI,CAACQ,GAAD,CAAX;AACTR,MAAAA,IAAI;AACP,KATL;AAUH,GAXC,CAAF;AAYH,CAnBO,CAAR",
      "sourceRoot": "/Users/teodora/Desktop/nodejs/test",
      "sourcesContent": [
        "const request = require('supertest');\nconst app = require('../app');\n\ndescribe('GET /api/phones', function () {\n    it('respond with json containing a list of all phones', function (done) {\n        request(app)\n            .get('/api/phones')\n            .set('Accept', 'application/json')\n            .expect('Content-Type', /json/)\n            .expect(200, done);\n    });\n});\n\ndescribe('POST /api/phones', function () {\n    let data = {\n        \"type\": \"mobile\",\n        \"serial\": \"serialno\",\n        \"color\": \"black\",\n        \"property\": \"{'owner':'owner name'}\"\n    }\n    it('respond with 201 created', function (done) {\n        request(app)\n            .post('/api/phones')\n            .send(data)\n            .set('Accept', 'application/json')\n            .expect('Content-Type', /json/)\n            .expect(201)\n            .end((err) => {\n                if (err) return done(err);\n                done();\n            });\n    });\n});\n\ndescribe('POST /api/phones', function () {\n    let data = {\n        \"type\": \"mobile\",\n        \"serial\": \"serialno\",\n        \"color\": \"black\",\n        \"proprietary\": \"{'owner':owner name'}\"\n    };\n    it('respond with Unprocessable entity', function (done) {\n        request(app)\n            .post('/api/phones')\n            .send(data)\n            .set('Accept', 'application/json')\n            .expect('Content-Type', /json/)\n            .expect(400)\n            .end((err) => {\n                if (err) return done(err);\n                done();\n            });\n    });\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1567170284445
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/app.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _Phone = _interopRequireDefault(require(\"./controllers/Phone\"));\n\nvar app = (0, _express[\"default\"])(); // view engine setup\n\napp.set('views', _path[\"default\"].join(__dirname, 'views'));\napp.set('view engine', 'pug'); // app.use(morgan('combined', { stream: winston.stream }));\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\n\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname)));\napp.use((0, _cors[\"default\"])()); // app.get('/', (req, res) => {\n//     return res.status(200).send({'message': 'YAY! Congratulations! Your first endpoint is working'});\n// })\n// app.get('*', (req, res) => {\n//     res.sendFile(path.join(__dirname, 'public', 'index.html'));\n// });\n\napp.use('/api', _routes[\"default\"]); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  var err = new Error('No API mapping found');\n  err.status = 400;\n  next(err);\n}); // error handler\n\napp.use(function (err, req, res, bin) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // winston.error(`${err.status || 500} - ${err.message} - ${req.originalUrl} - ${req.method} - ${req.ip}`);\n  // render the error page\n\n  res.status(err.status || 500);\n  res.json({\n    error: err\n  });\n  res.sendFile(_path[\"default\"].join(__dirname, 'public', 'error.html'));\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXQiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiZXhwcmVzcyIsInJvdXRlcyIsInJlcSIsInJlcyIsIm5leHQiLCJlcnIiLCJFcnJvciIsInN0YXR1cyIsImJpbiIsImxvY2FscyIsIm1lc3NhZ2UiLCJlcnJvciIsImdldCIsInNlbmRGaWxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUVBOztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE9BQVIsRUFBaUJDLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsT0FBckIsQ0FBakI7QUFDQUosR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QixFLENBQ0E7QUFFQTtBQUNBOztBQUNBRCxHQUFHLENBQUNLLEdBQUosQ0FBUUMsdUJBQVdDLElBQVgsRUFBUjtBQUNBUCxHQUFHLENBQUNLLEdBQUosQ0FBUUMsdUJBQVdFLFVBQVgsQ0FBc0I7QUFDMUJDLEVBQUFBLFFBQVEsRUFBRTtBQURnQixDQUF0QixDQUFSO0FBR0FULEdBQUcsQ0FBQ0ssR0FBSixDQUFRSyw4QkFBZVIsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixDQUFmLENBQVI7QUFFQUosR0FBRyxDQUFDSyxHQUFKLENBQVEsdUJBQVIsRSxDQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQUwsR0FBRyxDQUFDSyxHQUFKLENBQVEsTUFBUixFQUFnQk0sa0JBQWhCLEUsQ0FLQTs7QUFDQVgsR0FBRyxDQUFDSyxHQUFKLENBQVEsVUFBVU8sR0FBVixFQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUEwQjtBQUM5QixNQUFJQyxHQUFHLEdBQUcsSUFBSUMsS0FBSixDQUFVLHNCQUFWLENBQVY7QUFDQUQsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLEdBQWEsR0FBYjtBQUNBSCxFQUFBQSxJQUFJLENBQUNDLEdBQUQsQ0FBSjtBQUNILENBSkQsRSxDQU1BOztBQUNBZixHQUFHLENBQUNLLEdBQUosQ0FBUSxVQUFVVSxHQUFWLEVBQWVILEdBQWYsRUFBb0JDLEdBQXBCLEVBQXlCSyxHQUF6QixFQUE4QjtBQUNsQztBQUVBTCxFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBV0MsT0FBWCxHQUFxQkwsR0FBRyxDQUFDSyxPQUF6QjtBQUNBUCxFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBV0UsS0FBWCxHQUFtQlQsR0FBRyxDQUFDWixHQUFKLENBQVFzQixHQUFSLENBQVksS0FBWixNQUF1QixhQUF2QixHQUF1Q1AsR0FBdkMsR0FBNkMsRUFBaEUsQ0FKa0MsQ0FNbEM7QUFFQTs7QUFDQUYsRUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVdGLEdBQUcsQ0FBQ0UsTUFBSixJQUFjLEdBQXpCO0FBQ0FKLEVBQUFBLEdBQUcsQ0FBQ04sSUFBSixDQUFTO0FBQUNjLElBQUFBLEtBQUssRUFBQ047QUFBUCxHQUFUO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ1UsUUFBSixDQUFhckIsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixRQUFyQixFQUErQixZQUEvQixDQUFiO0FBQ0gsQ0FaRDtBQWNBb0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCekIsR0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlb2RvcmEvRGVza3RvcC9ub2RlanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IGJvZHlQYXJzZXIgIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuXG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzJztcblxuaW1wb3J0IFBob25lQ29udHJvbGxlciBmcm9tICcuL2NvbnRyb2xsZXJzL1Bob25lJ1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbi8vIHZpZXcgZW5naW5lIHNldHVwXG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICd2aWV3cycpKTtcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ3B1ZycpO1xuLy8gYXBwLnVzZShtb3JnYW4oJ2NvbWJpbmVkJywgeyBzdHJlYW06IHdpbnN0b24uc3RyZWFtIH0pKTtcblxuLy8gdW5jb21tZW50IGFmdGVyIHBsYWNpbmcgeW91ciBmYXZpY29uIGluIC9wdWJsaWNcbi8vYXBwLnVzZShmYXZpY29uKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnLCAnZmF2aWNvbi5pY28nKSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7XG4gICAgZXh0ZW5kZWQ6IGZhbHNlXG59KSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUpKSk7XG5cbmFwcC51c2UoY29ycygpKTtcblxuLy8gYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuLy8gICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZCh7J21lc3NhZ2UnOiAnWUFZISBDb25ncmF0dWxhdGlvbnMhIFlvdXIgZmlyc3QgZW5kcG9pbnQgaXMgd29ya2luZyd9KTtcbi8vIH0pXG5cbi8vIGFwcC5nZXQoJyonLCAocmVxLCByZXMpID0+IHtcbi8vICAgICByZXMuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSwgJ3B1YmxpYycsICdpbmRleC5odG1sJykpO1xuLy8gfSk7XG5cbmFwcC51c2UoJy9hcGknLCByb3V0ZXMpXG5cblxuXG5cbi8vIGNhdGNoIDQwNCBhbmQgZm9yd2FyZCB0byBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uIChyZXEsIHJlcywgbmV4dCkge1xuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoJ05vIEFQSSBtYXBwaW5nIGZvdW5kJyk7XG4gICAgZXJyLnN0YXR1cyA9IDQwMDtcbiAgICBuZXh0KGVycik7XG59KTtcblxuLy8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbiAoZXJyLCByZXEsIHJlcywgYmluKSB7XG4gICAgLy8gc2V0IGxvY2Fscywgb25seSBwcm92aWRpbmcgZXJyb3IgaW4gZGV2ZWxvcG1lbnRcblxuICAgIHJlcy5sb2NhbHMubWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuICAgIHJlcy5sb2NhbHMuZXJyb3IgPSByZXEuYXBwLmdldCgnZW52JykgPT09ICdkZXZlbG9wbWVudCcgPyBlcnIgOiB7fTtcblxuICAgIC8vIHdpbnN0b24uZXJyb3IoYCR7ZXJyLnN0YXR1cyB8fCA1MDB9IC0gJHtlcnIubWVzc2FnZX0gLSAke3JlcS5vcmlnaW5hbFVybH0gLSAke3JlcS5tZXRob2R9IC0gJHtyZXEuaXB9YCk7XG5cbiAgICAvLyByZW5kZXIgdGhlIGVycm9yIHBhZ2VcbiAgICByZXMuc3RhdHVzKGVyci5zdGF0dXMgfHwgNTAwKTtcbiAgICByZXMuanNvbih7ZXJyb3I6ZXJyfSlcbiAgICByZXMuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSwgJ3B1YmxpYycsICdlcnJvci5odG1sJykpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "set",
        "path",
        "join",
        "__dirname",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "express",
        "routes",
        "req",
        "res",
        "next",
        "err",
        "Error",
        "status",
        "bin",
        "locals",
        "message",
        "error",
        "get",
        "sendFile",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AAEA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB,E,CACA;AAEA;AACA;;AACAD,GAAG,CAACK,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAP,GAAG,CAACK,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAC1BC,EAAAA,QAAQ,EAAE;AADgB,CAAtB,CAAR;AAGAT,GAAG,CAACK,GAAJ,CAAQK,8BAAeR,iBAAKC,IAAL,CAAUC,SAAV,CAAf,CAAR;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,uBAAR,E,CAEA;AACA;AACA;AAEA;AACA;AACA;;AAEAL,GAAG,CAACK,GAAJ,CAAQ,MAAR,EAAgBM,kBAAhB,E,CAKA;;AACAX,GAAG,CAACK,GAAJ,CAAQ,UAAUO,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9B,MAAIC,GAAG,GAAG,IAAIC,KAAJ,CAAU,sBAAV,CAAV;AACAD,EAAAA,GAAG,CAACE,MAAJ,GAAa,GAAb;AACAH,EAAAA,IAAI,CAACC,GAAD,CAAJ;AACH,CAJD,E,CAMA;;AACAf,GAAG,CAACK,GAAJ,CAAQ,UAAUU,GAAV,EAAeH,GAAf,EAAoBC,GAApB,EAAyBK,GAAzB,EAA8B;AAClC;AAEAL,EAAAA,GAAG,CAACM,MAAJ,CAAWC,OAAX,GAAqBL,GAAG,CAACK,OAAzB;AACAP,EAAAA,GAAG,CAACM,MAAJ,CAAWE,KAAX,GAAmBT,GAAG,CAACZ,GAAJ,CAAQsB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCP,GAAvC,GAA6C,EAAhE,CAJkC,CAMlC;AAEA;;AACAF,EAAAA,GAAG,CAACI,MAAJ,CAAWF,GAAG,CAACE,MAAJ,IAAc,GAAzB;AACAJ,EAAAA,GAAG,CAACN,IAAJ,CAAS;AAACc,IAAAA,KAAK,EAACN;AAAP,GAAT;AACAF,EAAAA,GAAG,CAACU,QAAJ,CAAarB,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,YAA/B,CAAb;AACH,CAZD;AAcAoB,MAAM,CAACC,OAAP,GAAiBzB,GAAjB",
      "sourceRoot": "/Users/teodora/Desktop/nodejs",
      "sourcesContent": [
        "import express from 'express';\nimport path from 'path';\nimport bodyParser  from 'body-parser';\nimport cors from 'cors';\n\nimport routes from './routes';\n\nimport PhoneController from './controllers/Phone'\n\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n// app.use(morgan('combined', { stream: winston.stream }));\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n    extended: false\n}));\napp.use(express.static(path.join(__dirname)));\n\napp.use(cors());\n\n// app.get('/', (req, res) => {\n//     return res.status(200).send({'message': 'YAY! Congratulations! Your first endpoint is working'});\n// })\n\n// app.get('*', (req, res) => {\n//     res.sendFile(path.join(__dirname, 'public', 'index.html'));\n// });\n\napp.use('/api', routes)\n\n\n\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    var err = new Error('No API mapping found');\n    err.status = 400;\n    next(err);\n});\n\n// error handler\napp.use(function (err, req, res, bin) {\n    // set locals, only providing error in development\n\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // winston.error(`${err.status || 500} - ${err.message} - ${req.originalUrl} - ${req.method} - ${req.ip}`);\n\n    // render the error page\n    res.status(err.status || 500);\n    res.json({error:err})\n    res.sendFile(path.join(__dirname, 'public', 'error.html'));\n});\n\nmodule.exports = app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567155019893
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs/routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs/routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/routes/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _phone = _interopRequireDefault(require(\"../controllers/phone\"));\n\nvar router = (0, _express.Router)();\nrouter.get('/phones', _phone[\"default\"].getAll);\nrouter.get('/phones/:id', _phone[\"default\"].get);\nrouter.put('/phones/:id', _phone[\"default\"].update);\nrouter.post('/phones', _phone[\"default\"].create);\nrouter[\"delete\"]('/phones/:id', _phone[\"default\"][\"delete\"]);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsIlBob25lQ29udHJvbGxlciIsImdldEFsbCIsInB1dCIsInVwZGF0ZSIsInBvc3QiLCJjcmVhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUVBOztBQUVBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxTQUFYLEVBQXNCQyxrQkFBZ0JDLE1BQXRDO0FBQ0FILE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLGFBQVgsRUFBMEJDLGtCQUFnQkQsR0FBMUM7QUFDQUQsTUFBTSxDQUFDSSxHQUFQLENBQVcsYUFBWCxFQUEwQkYsa0JBQWdCRyxNQUExQztBQUNBTCxNQUFNLENBQUNNLElBQVAsQ0FBWSxTQUFaLEVBQXVCSixrQkFBZ0JLLE1BQXZDO0FBQ0FQLE1BQU0sVUFBTixDQUFjLGFBQWQsRUFBNkJFLDJCQUE3QjtlQUVlRixNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90ZW9kb3JhL0Rlc2t0b3Avbm9kZWpzL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuXG5pbXBvcnQgUGhvbmVDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL3Bob25lJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy9waG9uZXMnLCBQaG9uZUNvbnRyb2xsZXIuZ2V0QWxsKTtcbnJvdXRlci5nZXQoJy9waG9uZXMvOmlkJywgUGhvbmVDb250cm9sbGVyLmdldCk7XG5yb3V0ZXIucHV0KCcvcGhvbmVzLzppZCcsIFBob25lQ29udHJvbGxlci51cGRhdGUpO1xucm91dGVyLnBvc3QoJy9waG9uZXMnLCBQaG9uZUNvbnRyb2xsZXIuY3JlYXRlKTtcbnJvdXRlci5kZWxldGUoJy9waG9uZXMvOmlkJywgUGhvbmVDb250cm9sbGVyLmRlbGV0ZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "get",
        "PhoneController",
        "getAll",
        "put",
        "update",
        "post",
        "create"
      ],
      "mappings": ";;;;;;;;;AAAA;;AAEA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,SAAX,EAAsBC,kBAAgBC,MAAtC;AACAH,MAAM,CAACC,GAAP,CAAW,aAAX,EAA0BC,kBAAgBD,GAA1C;AACAD,MAAM,CAACI,GAAP,CAAW,aAAX,EAA0BF,kBAAgBG,MAA1C;AACAL,MAAM,CAACM,IAAP,CAAY,SAAZ,EAAuBJ,kBAAgBK,MAAvC;AACAP,MAAM,UAAN,CAAc,aAAd,EAA6BE,2BAA7B;eAEeF,M",
      "sourceRoot": "/Users/teodora/Desktop/nodejs/routes",
      "sourcesContent": [
        "import { Router } from 'express';\n\nimport PhoneController from '../controllers/phone';\n\nconst router = Router();\n\nrouter.get('/phones', PhoneController.getAll);\nrouter.get('/phones/:id', PhoneController.get);\nrouter.put('/phones/:id', PhoneController.update);\nrouter.post('/phones', PhoneController.create);\nrouter.delete('/phones/:id', PhoneController.delete);\n\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567170138060
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/controllers/phone.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/controllers/phone.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/controllers/phone.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/controllers/phone.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
        "sourceFileName": "phone.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _Phone = _interopRequireDefault(require(\"../models/Phone\"));\n\nvar _util = require(\"../util\");\n\nvar Phone = {\n  create: function () {\n    var _create = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee(req, res, next) {\n      var metadata, phone;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              metadata = '';\n\n              if (!req.body.proprietary) {\n                _context.next = 6;\n                break;\n              }\n\n              metadata = (0, _util.hash)(req.body.proprietary);\n\n              if (metadata) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'Unprocessable entity'\n              }));\n\n            case 6:\n              _context.next = 8;\n              return _Phone[\"default\"].create(req.body, metadata);\n\n            case 8:\n              phone = _context.sent;\n              res.status(201).send(phone);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              next(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    function create(_x, _x2, _x3) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  getAll: function () {\n    var _getAll = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee2(req, res, next) {\n      var phones;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _Phone[\"default\"].findAll();\n\n            case 3:\n              phones = _context2.sent;\n              res.status(200).send(phones);\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              next(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    function getAll(_x4, _x5, _x6) {\n      return _getAll.apply(this, arguments);\n    }\n\n    return getAll;\n  }(),\n  update: function () {\n    var _update = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee3(req, res, next) {\n      var id, phone, metadata, updatedPhone;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              id = req.params.id;\n              _context3.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context3.sent;\n\n              if (phone) {\n                _context3.next = 7;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.status(404).send({\n                'message': 'Phone not found'\n              }));\n\n            case 7:\n              metadata = phone.metadata;\n\n              if (!req.body.proprietary) {\n                _context3.next = 12;\n                break;\n              }\n\n              metadata = (0, _util.hash)(req.body.proprietary);\n\n              if (metadata) {\n                _context3.next = 12;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.status(400).send({\n                'message': 'Unprocessable entity'\n              }));\n\n            case 12:\n              _context3.next = 14;\n              return _Phone[\"default\"].update(id, req.body, metadata);\n\n            case 14:\n              updatedPhone = _context3.sent;\n              res.status(200).send(updatedPhone);\n              _context3.next = 22;\n              break;\n\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              next(_context3.t0);\n\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 18]]);\n    }));\n\n    function update(_x7, _x8, _x9) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }(),\n  \"delete\": function () {\n    var _delete2 = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee4(req, res, next) {\n      var id, phone, deletedPhone;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id = req.params.id;\n              _context4.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context4.sent;\n              if (!phone) res.status(404).send({\n                'message': 'Phone not found'\n              });\n              _context4.next = 8;\n              return _Phone[\"default\"][\"delete\"](id);\n\n            case 8:\n              deletedPhone = _context4.sent;\n              res.status(204).send(deletedPhone);\n              _context4.next = 15;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n              next(_context4.t0);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 12]]);\n    }));\n\n    function _delete(_x10, _x11, _x12) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  get: function () {\n    var _get = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee5(req, res, next) {\n      var id, phone;\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id = req.params.id;\n              _context5.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context5.sent;\n              if (!phone) res.status(404).send({\n                'message': 'Phone not found'\n              });\n              res.status(200).send(phone);\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              next(_context5.t0);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 9]]);\n    }));\n\n    function get(_x13, _x14, _x15) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }()\n};\nvar _default = Phone;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob25lLmpzIl0sIm5hbWVzIjpbIlBob25lIiwiY3JlYXRlIiwicmVxIiwicmVzIiwibmV4dCIsIm1ldGFkYXRhIiwiYm9keSIsInByb3ByaWV0YXJ5Iiwic3RhdHVzIiwic2VuZCIsIlBob25lTW9kZWwiLCJwaG9uZSIsImdldEFsbCIsImZpbmRBbGwiLCJwaG9uZXMiLCJ1cGRhdGUiLCJpZCIsInBhcmFtcyIsImZpbmRPbmUiLCJ1cGRhdGVkUGhvbmUiLCJjb25zb2xlIiwibG9nIiwiZGVsZXRlZFBob25lIiwiZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsS0FBSyxHQUFHO0FBRUpDLEVBQUFBLE1BRkk7QUFBQTtBQUFBO0FBQUEsa0RBRUdDLEdBRkgsRUFFUUMsR0FGUixFQUVhQyxJQUZiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBSUVDLGNBQUFBLFFBSkYsR0FJYSxFQUpiOztBQUFBLG1CQUtFSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FMWDtBQUFBO0FBQUE7QUFBQTs7QUFNRUYsY0FBQUEsUUFBUSxHQUFHLGdCQUFLSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FBZCxDQUFYOztBQU5GLGtCQU9PRixRQVBQO0FBQUE7QUFBQTtBQUFBOztBQUFBLCtDQVFhRixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckIsQ0FSYjs7QUFBQTtBQUFBO0FBQUEscUJBVWtCQyxrQkFBV1QsTUFBWCxDQUFrQkMsR0FBRyxDQUFDSSxJQUF0QixFQUE0QkQsUUFBNUIsQ0FWbEI7O0FBQUE7QUFVSU0sY0FBQUEsS0FWSjtBQVdGUixjQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkUsS0FBckI7QUFYRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQWFGUCxjQUFBQSxJQUFJLGFBQUo7O0FBYkU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFpQkpRLEVBQUFBLE1BakJJO0FBQUE7QUFBQTtBQUFBLG1EQWlCR1YsR0FqQkgsRUFpQlFDLEdBakJSLEVBaUJhQyxJQWpCYjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBbUJtQk0sa0JBQVdHLE9BQVgsRUFuQm5COztBQUFBO0FBbUJJQyxjQUFBQSxNQW5CSjtBQW9CRlgsY0FBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJLLE1BQXJCO0FBcEJFO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBc0JGVixjQUFBQSxJQUFJLGNBQUo7O0FBdEJFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBMEJKVyxFQUFBQSxNQTFCSTtBQUFBO0FBQUE7QUFBQSxtREEwQkdiLEdBMUJILEVBMEJRQyxHQTFCUixFQTBCYUMsSUExQmI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUE0QklZLGNBQUFBLEVBNUJKLEdBNEJTZCxHQUFHLENBQUNlLE1BQUosQ0FBV0QsRUE1QnBCO0FBQUE7QUFBQSxxQkE2QmtCTixrQkFBV1EsT0FBWCxDQUFtQkYsRUFBbkIsQ0E3QmxCOztBQUFBO0FBNkJJTCxjQUFBQSxLQTdCSjs7QUFBQSxrQkE4QkdBLEtBOUJIO0FBQUE7QUFBQTtBQUFBOztBQUFBLGdEQStCU1IsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQywyQkFBVztBQUFaLGVBQXJCLENBL0JUOztBQUFBO0FBZ0NFSixjQUFBQSxRQWhDRixHQWdDYU0sS0FBSyxDQUFDTixRQWhDbkI7O0FBQUEsbUJBaUNFSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FqQ1g7QUFBQTtBQUFBO0FBQUE7O0FBa0NFRixjQUFBQSxRQUFRLEdBQUcsZ0JBQUtILEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxXQUFkLENBQVg7O0FBbENGLGtCQW1DT0YsUUFuQ1A7QUFBQTtBQUFBO0FBQUE7O0FBQUEsZ0RBb0NhRixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckIsQ0FwQ2I7O0FBQUE7QUFBQTtBQUFBLHFCQXNDeUJDLGtCQUFXSyxNQUFYLENBQWtCQyxFQUFsQixFQUFzQmQsR0FBRyxDQUFDSSxJQUExQixFQUFnQ0QsUUFBaEMsQ0F0Q3pCOztBQUFBO0FBc0NJYyxjQUFBQSxZQXRDSjtBQXVDRmhCLGNBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCVSxZQUFyQjtBQXZDRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXlDRkMsY0FBQUEsT0FBTyxDQUFDQyxHQUFSO0FBQ0FqQixjQUFBQSxJQUFJLGNBQUo7O0FBMUNFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbURBOENHRixHQTlDSCxFQThDUUMsR0E5Q1IsRUE4Q2FDLElBOUNiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBZ0RJWSxjQUFBQSxFQWhESixHQWdEU2QsR0FBRyxDQUFDZSxNQUFKLENBQVdELEVBaERwQjtBQUFBO0FBQUEscUJBaURrQk4sa0JBQVdRLE9BQVgsQ0FBbUJGLEVBQW5CLENBakRsQjs7QUFBQTtBQWlESUwsY0FBQUEsS0FqREo7QUFrREYsa0JBQUksQ0FBQ0EsS0FBTCxFQUNJUixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckI7QUFuREY7QUFBQSxxQkFvRHlCQyw0QkFBa0JNLEVBQWxCLENBcER6Qjs7QUFBQTtBQW9ESU0sY0FBQUEsWUFwREo7QUFxREZuQixjQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQmEsWUFBckI7QUFyREU7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUF3REZsQixjQUFBQSxJQUFJLGNBQUo7O0FBeERFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBNERKbUIsRUFBQUEsR0E1REk7QUFBQTtBQUFBO0FBQUEsbURBNERBckIsR0E1REEsRUE0REtDLEdBNURMLEVBNERVQyxJQTVEVjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQThESVksY0FBQUEsRUE5REosR0E4RFNkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXRCxFQTlEcEI7QUFBQTtBQUFBLHFCQStEa0JOLGtCQUFXUSxPQUFYLENBQW1CRixFQUFuQixDQS9EbEI7O0FBQUE7QUErRElMLGNBQUFBLEtBL0RKO0FBZ0VGLGtCQUFJLENBQUNBLEtBQUwsRUFDSVIsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQywyQkFBVztBQUFaLGVBQXJCO0FBQ0pOLGNBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRSxLQUFyQjtBQWxFRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXFFRlAsY0FBQUEsSUFBSSxjQUFKOztBQXJFRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLENBQWQ7ZUEyRWVKLEsiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlb2RvcmEvRGVza3RvcC9ub2RlanMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGhvbmVNb2RlbCBmcm9tICcuLi9tb2RlbHMvUGhvbmUnO1xuaW1wb3J0IHtoYXNoLCB1bmhhc2h9IGZyb20gJy4uL3V0aWwnO1xuXG5jb25zdCBQaG9uZSA9IHtcblxuICAgIGFzeW5jIGNyZWF0ZShyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgbGV0IG1ldGFkYXRhID0gJydcbiAgICAgICAgICAgIGlmIChyZXEuYm9keS5wcm9wcmlldGFyeSkge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhID0gaGFzaChyZXEuYm9keS5wcm9wcmlldGFyeSk7XG4gICAgICAgICAgICAgICAgaWYgKCFtZXRhZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsnbWVzc2FnZSc6ICdVbnByb2Nlc3NhYmxlIGVudGl0eSd9KVxuICAgICAgICAgICAgfSAgICBcbiAgICAgICAgICAgIGNvbnN0IHBob25lID0gYXdhaXQgUGhvbmVNb2RlbC5jcmVhdGUocmVxLmJvZHksIG1ldGFkYXRhKTtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKHBob25lKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIG5leHQoZXJyb3IpXG4gICAgICAgIH0gXG4gICAgfSxcblxuICAgIGFzeW5jIGdldEFsbChyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcGhvbmVzID0gYXdhaXQgUGhvbmVNb2RlbC5maW5kQWxsKCk7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChwaG9uZXMpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYXN5bmMgdXBkYXRlKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHJlcS5wYXJhbXMuaWQ7XG4gICAgICAgICAgICBjb25zdCBwaG9uZSA9IGF3YWl0IFBob25lTW9kZWwuZmluZE9uZShpZCk7XG4gICAgICAgICAgICBpZiAoIXBob25lKVxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuc2VuZCh7J21lc3NhZ2UnOiAnUGhvbmUgbm90IGZvdW5kJ30pXG4gICAgICAgICAgICBsZXQgbWV0YWRhdGEgPSBwaG9uZS5tZXRhZGF0YTtcbiAgICAgICAgICAgIGlmIChyZXEuYm9keS5wcm9wcmlldGFyeSkge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhID0gaGFzaChyZXEuYm9keS5wcm9wcmlldGFyeSk7XG4gICAgICAgICAgICAgICAgaWYgKCFtZXRhZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsnbWVzc2FnZSc6ICdVbnByb2Nlc3NhYmxlIGVudGl0eSd9KVxuICAgICAgICAgICAgfSAgICBcbiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZWRQaG9uZSA9IGF3YWl0IFBob25lTW9kZWwudXBkYXRlKGlkLCByZXEuYm9keSwgbWV0YWRhdGEpO1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQodXBkYXRlZFBob25lKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKVxuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9LCBcblxuICAgIGFzeW5jIGRlbGV0ZShyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgaWQgPSByZXEucGFyYW1zLmlkO1xuICAgICAgICAgICAgY29uc3QgcGhvbmUgPSBhd2FpdCBQaG9uZU1vZGVsLmZpbmRPbmUoaWQpO1xuICAgICAgICAgICAgaWYgKCFwaG9uZSlcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwNCkuc2VuZCh7J21lc3NhZ2UnOiAnUGhvbmUgbm90IGZvdW5kJ30pXG4gICAgICAgICAgICBjb25zdCBkZWxldGVkUGhvbmUgPSBhd2FpdCBQaG9uZU1vZGVsLmRlbGV0ZShpZCk7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwNCkuc2VuZChkZWxldGVkUGhvbmUpXG4gICAgICAgICAgICBcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIG5leHQoZXJyb3IpXG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYXN5bmMgZ2V0KHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHJlcS5wYXJhbXMuaWQ7XG4gICAgICAgICAgICBjb25zdCBwaG9uZSA9IGF3YWl0IFBob25lTW9kZWwuZmluZE9uZShpZCk7XG4gICAgICAgICAgICBpZiAoIXBob25lKVxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKHsnbWVzc2FnZSc6ICdQaG9uZSBub3QgZm91bmQnfSlcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHBob25lKVxuXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBuZXh0KGVycm9yKVxuICAgICAgICB9XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFBob25lOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "phone.js"
      ],
      "names": [
        "Phone",
        "create",
        "req",
        "res",
        "next",
        "metadata",
        "body",
        "proprietary",
        "status",
        "send",
        "PhoneModel",
        "phone",
        "getAll",
        "findAll",
        "phones",
        "update",
        "id",
        "params",
        "findOne",
        "updatedPhone",
        "console",
        "log",
        "deletedPhone",
        "get"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,KAAK,GAAG;AAEJC,EAAAA,MAFI;AAAA;AAAA;AAAA,kDAEGC,GAFH,EAEQC,GAFR,EAEaC,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIEC,cAAAA,QAJF,GAIa,EAJb;;AAAA,mBAKEH,GAAG,CAACI,IAAJ,CAASC,WALX;AAAA;AAAA;AAAA;;AAMEF,cAAAA,QAAQ,GAAG,gBAAKH,GAAG,CAACI,IAAJ,CAASC,WAAd,CAAX;;AANF,kBAOOF,QAPP;AAAA;AAAA;AAAA;;AAAA,+CAQaF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CARb;;AAAA;AAAA;AAAA,qBAUkBC,kBAAWT,MAAX,CAAkBC,GAAG,CAACI,IAAtB,EAA4BD,QAA5B,CAVlB;;AAAA;AAUIM,cAAAA,KAVJ;AAWFR,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,KAArB;AAXE;AAAA;;AAAA;AAAA;AAAA;AAaFP,cAAAA,IAAI,aAAJ;;AAbE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiBJQ,EAAAA,MAjBI;AAAA;AAAA;AAAA,mDAiBGV,GAjBH,EAiBQC,GAjBR,EAiBaC,IAjBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAmBmBM,kBAAWG,OAAX,EAnBnB;;AAAA;AAmBIC,cAAAA,MAnBJ;AAoBFX,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,MAArB;AApBE;AAAA;;AAAA;AAAA;AAAA;AAsBFV,cAAAA,IAAI,cAAJ;;AAtBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0BJW,EAAAA,MA1BI;AAAA;AAAA;AAAA,mDA0BGb,GA1BH,EA0BQC,GA1BR,EA0BaC,IA1Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BIY,cAAAA,EA5BJ,GA4BSd,GAAG,CAACe,MAAJ,CAAWD,EA5BpB;AAAA;AAAA,qBA6BkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CA7BlB;;AAAA;AA6BIL,cAAAA,KA7BJ;;AAAA,kBA8BGA,KA9BH;AAAA;AAAA;AAAA;;AAAA,gDA+BSR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CA/BT;;AAAA;AAgCEJ,cAAAA,QAhCF,GAgCaM,KAAK,CAACN,QAhCnB;;AAAA,mBAiCEH,GAAG,CAACI,IAAJ,CAASC,WAjCX;AAAA;AAAA;AAAA;;AAkCEF,cAAAA,QAAQ,GAAG,gBAAKH,GAAG,CAACI,IAAJ,CAASC,WAAd,CAAX;;AAlCF,kBAmCOF,QAnCP;AAAA;AAAA;AAAA;;AAAA,gDAoCaF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CApCb;;AAAA;AAAA;AAAA,qBAsCyBC,kBAAWK,MAAX,CAAkBC,EAAlB,EAAsBd,GAAG,CAACI,IAA1B,EAAgCD,QAAhC,CAtCzB;;AAAA;AAsCIc,cAAAA,YAtCJ;AAuCFhB,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,YAArB;AAvCE;AAAA;;AAAA;AAAA;AAAA;AAyCFC,cAAAA,OAAO,CAACC,GAAR;AACAjB,cAAAA,IAAI,cAAJ;;AA1CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDA8CGF,GA9CH,EA8CQC,GA9CR,EA8CaC,IA9Cb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDIY,cAAAA,EAhDJ,GAgDSd,GAAG,CAACe,MAAJ,CAAWD,EAhDpB;AAAA;AAAA,qBAiDkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CAjDlB;;AAAA;AAiDIL,cAAAA,KAjDJ;AAkDF,kBAAI,CAACA,KAAL,EACIR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB;AAnDF;AAAA,qBAoDyBC,4BAAkBM,EAAlB,CApDzB;;AAAA;AAoDIM,cAAAA,YApDJ;AAqDFnB,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,YAArB;AArDE;AAAA;;AAAA;AAAA;AAAA;AAwDFlB,cAAAA,IAAI,cAAJ;;AAxDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4DJmB,EAAAA,GA5DI;AAAA;AAAA;AAAA,mDA4DArB,GA5DA,EA4DKC,GA5DL,EA4DUC,IA5DV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8DIY,cAAAA,EA9DJ,GA8DSd,GAAG,CAACe,MAAJ,CAAWD,EA9DpB;AAAA;AAAA,qBA+DkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CA/DlB;;AAAA;AA+DIL,cAAAA,KA/DJ;AAgEF,kBAAI,CAACA,KAAL,EACIR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB;AACJN,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,KAArB;AAlEE;AAAA;;AAAA;AAAA;AAAA;AAqEFP,cAAAA,IAAI,cAAJ;;AArEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAd;eA2EeJ,K",
      "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
      "sourcesContent": [
        "import PhoneModel from '../models/Phone';\nimport {hash, unhash} from '../util';\n\nconst Phone = {\n\n    async create(req, res, next) {\n        try {\n            let metadata = ''\n            if (req.body.proprietary) {\n                metadata = hash(req.body.proprietary);\n                if (!metadata)\n                    return res.status(400).send({'message': 'Unprocessable entity'})\n            }    \n            const phone = await PhoneModel.create(req.body, metadata);\n            res.status(201).send(phone);\n        } catch (error) {\n            next(error)\n        } \n    },\n\n    async getAll(req, res, next) {\n        try {\n            const phones = await PhoneModel.findAll();\n            res.status(200).send(phones);\n        } catch (error) {\n            next(error);\n        }\n    },\n\n    async update(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                return res.status(404).send({'message': 'Phone not found'})\n            let metadata = phone.metadata;\n            if (req.body.proprietary) {\n                metadata = hash(req.body.proprietary);\n                if (!metadata)\n                    return res.status(400).send({'message': 'Unprocessable entity'})\n            }    \n            const updatedPhone = await PhoneModel.update(id, req.body, metadata);\n            res.status(200).send(updatedPhone);\n        } catch (error) {\n            console.log(error)\n            next(error);\n        }\n    }, \n\n    async delete(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                res.status(404).send({'message': 'Phone not found'})\n            const deletedPhone = await PhoneModel.delete(id);\n            res.status(204).send(deletedPhone)\n            \n        } catch (error) {\n            next(error)\n        }\n    },\n\n    async get(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                res.status(404).send({'message': 'Phone not found'})\n            res.status(200).send(phone)\n\n        } catch (error) {\n            next(error)\n        }\n    }\n\n}\n\nexport default Phone;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567170199422
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/models/Phone.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/models/Phone.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/models/Phone.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/models/Phone.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs/models",
        "sourceFileName": "Phone.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _uuid = _interopRequireDefault(require(\"uuid\"));\n\nvar _util = _interopRequireDefault(require(\"./../util\"));\n\nvar Phone =\n/*#__PURE__*/\nfunction () {\n  function Phone() {\n    (0, _classCallCheck2[\"default\"])(this, Phone);\n    this.phones = [];\n  }\n\n  (0, _createClass2[\"default\"])(Phone, [{\n    key: \"create\",\n    value: function create(data, metadata) {\n      var phone = {\n        id: _uuid[\"default\"].v4(),\n        type: data.type || '',\n        serial: data.serial || '',\n        color: data.color || '',\n        metadata: metadata,\n        created: _moment[\"default\"].now(),\n        updated: _moment[\"default\"].now()\n      };\n      this.phones.push(phone);\n      return phone;\n    }\n  }, {\n    key: \"findOne\",\n    value: function findOne(id) {\n      return this.phones.find(function (phone) {\n        return phone.id === id;\n      });\n    }\n  }, {\n    key: \"findAll\",\n    value: function findAll() {\n      return this.phones;\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, data, metadata) {\n      var phone = this.findOne(id);\n      var index = this.phones.indexOf(phone);\n      this.phones[index].type = data.type || phone.type;\n      this.phones[index].serial = data.serial || phone.serial;\n      this.phones[index].color = data.color || phone.color;\n      this.phones[index].metadata = metadata;\n      this.phones[index].updated = _moment[\"default\"].now();\n      return this.phones[index];\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      var phone = this.findOne(id);\n      var index = this.phones.indexOf(phone);\n      this.phones.splice(index, 1);\n      return {};\n    }\n  }]);\n  return Phone;\n}();\n\nvar _default = new Phone();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBob25lLmpzIl0sIm5hbWVzIjpbIlBob25lIiwicGhvbmVzIiwiZGF0YSIsIm1ldGFkYXRhIiwicGhvbmUiLCJpZCIsInV1aWQiLCJ2NCIsInR5cGUiLCJzZXJpYWwiLCJjb2xvciIsImNyZWF0ZWQiLCJtb21lbnQiLCJub3ciLCJ1cGRhdGVkIiwicHVzaCIsImZpbmQiLCJmaW5kT25lIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0lBRU1BLEs7OztBQUVGLG1CQUFjO0FBQUE7QUFDVixTQUFLQyxNQUFMLEdBQWMsRUFBZDtBQUNIOzs7OzJCQUVNQyxJLEVBQU1DLFEsRUFBVTtBQUNuQixVQUFNQyxLQUFLLEdBQUc7QUFDVkMsUUFBQUEsRUFBRSxFQUFFQyxpQkFBS0MsRUFBTCxFQURNO0FBRVZDLFFBQUFBLElBQUksRUFBRU4sSUFBSSxDQUFDTSxJQUFMLElBQWEsRUFGVDtBQUdWQyxRQUFBQSxNQUFNLEVBQUVQLElBQUksQ0FBQ08sTUFBTCxJQUFlLEVBSGI7QUFJVkMsUUFBQUEsS0FBSyxFQUFFUixJQUFJLENBQUNRLEtBQUwsSUFBYyxFQUpYO0FBS1ZQLFFBQUFBLFFBQVEsRUFBRUEsUUFMQTtBQU1WUSxRQUFBQSxPQUFPLEVBQUVDLG1CQUFPQyxHQUFQLEVBTkM7QUFPVkMsUUFBQUEsT0FBTyxFQUFFRixtQkFBT0MsR0FBUDtBQVBDLE9BQWQ7QUFVQSxXQUFLWixNQUFMLENBQVljLElBQVosQ0FBaUJYLEtBQWpCO0FBQ0EsYUFBT0EsS0FBUDtBQUNIOzs7NEJBRU9DLEUsRUFBSTtBQUNSLGFBQU8sS0FBS0osTUFBTCxDQUFZZSxJQUFaLENBQWlCLFVBQUFaLEtBQUs7QUFBQSxlQUFJQSxLQUFLLENBQUNDLEVBQU4sS0FBYUEsRUFBakI7QUFBQSxPQUF0QixDQUFQO0FBQ0g7Ozs4QkFFUztBQUNOLGFBQU8sS0FBS0osTUFBWjtBQUNIOzs7MkJBRU1JLEUsRUFBSUgsSSxFQUFNQyxRLEVBQVU7QUFDdkIsVUFBTUMsS0FBSyxHQUFHLEtBQUthLE9BQUwsQ0FBYVosRUFBYixDQUFkO0FBQ0EsVUFBTWEsS0FBSyxHQUFHLEtBQUtqQixNQUFMLENBQVlrQixPQUFaLENBQW9CZixLQUFwQixDQUFkO0FBRUEsV0FBS0gsTUFBTCxDQUFZaUIsS0FBWixFQUFtQlYsSUFBbkIsR0FBMEJOLElBQUksQ0FBQ00sSUFBTCxJQUFhSixLQUFLLENBQUNJLElBQTdDO0FBQ0EsV0FBS1AsTUFBTCxDQUFZaUIsS0FBWixFQUFtQlQsTUFBbkIsR0FBNEJQLElBQUksQ0FBQ08sTUFBTCxJQUFlTCxLQUFLLENBQUNLLE1BQWpEO0FBQ0EsV0FBS1IsTUFBTCxDQUFZaUIsS0FBWixFQUFtQlIsS0FBbkIsR0FBMkJSLElBQUksQ0FBQ1EsS0FBTCxJQUFjTixLQUFLLENBQUNNLEtBQS9DO0FBQ0EsV0FBS1QsTUFBTCxDQUFZaUIsS0FBWixFQUFtQmYsUUFBbkIsR0FBOEJBLFFBQTlCO0FBQ0EsV0FBS0YsTUFBTCxDQUFZaUIsS0FBWixFQUFtQkosT0FBbkIsR0FBNkJGLG1CQUFPQyxHQUFQLEVBQTdCO0FBRUEsYUFBTyxLQUFLWixNQUFMLENBQVlpQixLQUFaLENBQVA7QUFDSDs7OzRCQUVNYixFLEVBQUk7QUFDUCxVQUFNRCxLQUFLLEdBQUcsS0FBS2EsT0FBTCxDQUFhWixFQUFiLENBQWQ7QUFDQSxVQUFNYSxLQUFLLEdBQUcsS0FBS2pCLE1BQUwsQ0FBWWtCLE9BQVosQ0FBb0JmLEtBQXBCLENBQWQ7QUFDQSxXQUFLSCxNQUFMLENBQVltQixNQUFaLENBQW1CRixLQUFuQixFQUEwQixDQUExQjtBQUNBLGFBQU8sRUFBUDtBQUNIOzs7OztlQUlVLElBQUlsQixLQUFKLEUiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlb2RvcmEvRGVza3RvcC9ub2RlanMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnO1xuaW1wb3J0IHV1aWQgZnJvbSAndXVpZCc7XG5pbXBvcnQgcGFyc2VyIGZyb20gJy4vLi4vdXRpbCdcblxuY2xhc3MgUGhvbmUge1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucGhvbmVzID0gW107XG4gICAgfVxuXG4gICAgY3JlYXRlKGRhdGEsIG1ldGFkYXRhKSB7XG4gICAgICAgIGNvbnN0IHBob25lID0ge1xuICAgICAgICAgICAgaWQ6IHV1aWQudjQoKSwgXG4gICAgICAgICAgICB0eXBlOiBkYXRhLnR5cGUgfHwgJycsXG4gICAgICAgICAgICBzZXJpYWw6IGRhdGEuc2VyaWFsIHx8ICcnLFxuICAgICAgICAgICAgY29sb3I6IGRhdGEuY29sb3IgfHwgJycsXG4gICAgICAgICAgICBtZXRhZGF0YTogbWV0YWRhdGEsIFxuICAgICAgICAgICAgY3JlYXRlZDogbW9tZW50Lm5vdygpLFxuICAgICAgICAgICAgdXBkYXRlZDogbW9tZW50Lm5vdygpXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5waG9uZXMucHVzaChwaG9uZSk7XG4gICAgICAgIHJldHVybiBwaG9uZTtcbiAgICB9XG5cbiAgICBmaW5kT25lKGlkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBob25lcy5maW5kKHBob25lID0+IHBob25lLmlkID09PSBpZCk7XG4gICAgfVxuXG4gICAgZmluZEFsbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGhvbmVzO1xuICAgIH1cblxuICAgIHVwZGF0ZShpZCwgZGF0YSwgbWV0YWRhdGEpIHtcbiAgICAgICAgY29uc3QgcGhvbmUgPSB0aGlzLmZpbmRPbmUoaWQpO1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMucGhvbmVzLmluZGV4T2YocGhvbmUpO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5waG9uZXNbaW5kZXhdLnR5cGUgPSBkYXRhLnR5cGUgfHwgcGhvbmUudHlwZTtcbiAgICAgICAgdGhpcy5waG9uZXNbaW5kZXhdLnNlcmlhbCA9IGRhdGEuc2VyaWFsIHx8IHBob25lLnNlcmlhbDtcbiAgICAgICAgdGhpcy5waG9uZXNbaW5kZXhdLmNvbG9yID0gZGF0YS5jb2xvciB8fCBwaG9uZS5jb2xvcjtcbiAgICAgICAgdGhpcy5waG9uZXNbaW5kZXhdLm1ldGFkYXRhID0gbWV0YWRhdGE7XG4gICAgICAgIHRoaXMucGhvbmVzW2luZGV4XS51cGRhdGVkID0gbW9tZW50Lm5vdygpO1xuXG4gICAgICAgIHJldHVybiB0aGlzLnBob25lc1tpbmRleF07XG4gICAgfVxuXG4gICAgZGVsZXRlKGlkKSB7XG4gICAgICAgIGNvbnN0IHBob25lID0gdGhpcy5maW5kT25lKGlkKTtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnBob25lcy5pbmRleE9mKHBob25lKTtcbiAgICAgICAgdGhpcy5waG9uZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgUGhvbmUoKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Phone.js"
      ],
      "names": [
        "Phone",
        "phones",
        "data",
        "metadata",
        "phone",
        "id",
        "uuid",
        "v4",
        "type",
        "serial",
        "color",
        "created",
        "moment",
        "now",
        "updated",
        "push",
        "find",
        "findOne",
        "index",
        "indexOf",
        "splice"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AACA;;IAEMA,K;;;AAEF,mBAAc;AAAA;AACV,SAAKC,MAAL,GAAc,EAAd;AACH;;;;2BAEMC,I,EAAMC,Q,EAAU;AACnB,UAAMC,KAAK,GAAG;AACVC,QAAAA,EAAE,EAAEC,iBAAKC,EAAL,EADM;AAEVC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAAL,IAAa,EAFT;AAGVC,QAAAA,MAAM,EAAEP,IAAI,CAACO,MAAL,IAAe,EAHb;AAIVC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAAL,IAAc,EAJX;AAKVP,QAAAA,QAAQ,EAAEA,QALA;AAMVQ,QAAAA,OAAO,EAAEC,mBAAOC,GAAP,EANC;AAOVC,QAAAA,OAAO,EAAEF,mBAAOC,GAAP;AAPC,OAAd;AAUA,WAAKZ,MAAL,CAAYc,IAAZ,CAAiBX,KAAjB;AACA,aAAOA,KAAP;AACH;;;4BAEOC,E,EAAI;AACR,aAAO,KAAKJ,MAAL,CAAYe,IAAZ,CAAiB,UAAAZ,KAAK;AAAA,eAAIA,KAAK,CAACC,EAAN,KAAaA,EAAjB;AAAA,OAAtB,CAAP;AACH;;;8BAES;AACN,aAAO,KAAKJ,MAAZ;AACH;;;2BAEMI,E,EAAIH,I,EAAMC,Q,EAAU;AACvB,UAAMC,KAAK,GAAG,KAAKa,OAAL,CAAaZ,EAAb,CAAd;AACA,UAAMa,KAAK,GAAG,KAAKjB,MAAL,CAAYkB,OAAZ,CAAoBf,KAApB,CAAd;AAEA,WAAKH,MAAL,CAAYiB,KAAZ,EAAmBV,IAAnB,GAA0BN,IAAI,CAACM,IAAL,IAAaJ,KAAK,CAACI,IAA7C;AACA,WAAKP,MAAL,CAAYiB,KAAZ,EAAmBT,MAAnB,GAA4BP,IAAI,CAACO,MAAL,IAAeL,KAAK,CAACK,MAAjD;AACA,WAAKR,MAAL,CAAYiB,KAAZ,EAAmBR,KAAnB,GAA2BR,IAAI,CAACQ,KAAL,IAAcN,KAAK,CAACM,KAA/C;AACA,WAAKT,MAAL,CAAYiB,KAAZ,EAAmBf,QAAnB,GAA8BA,QAA9B;AACA,WAAKF,MAAL,CAAYiB,KAAZ,EAAmBJ,OAAnB,GAA6BF,mBAAOC,GAAP,EAA7B;AAEA,aAAO,KAAKZ,MAAL,CAAYiB,KAAZ,CAAP;AACH;;;4BAEMb,E,EAAI;AACP,UAAMD,KAAK,GAAG,KAAKa,OAAL,CAAaZ,EAAb,CAAd;AACA,UAAMa,KAAK,GAAG,KAAKjB,MAAL,CAAYkB,OAAZ,CAAoBf,KAApB,CAAd;AACA,WAAKH,MAAL,CAAYmB,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACA,aAAO,EAAP;AACH;;;;;eAIU,IAAIlB,KAAJ,E",
      "sourceRoot": "/Users/teodora/Desktop/nodejs/models",
      "sourcesContent": [
        "import moment from 'moment';\nimport uuid from 'uuid';\nimport parser from './../util'\n\nclass Phone {\n\n    constructor() {\n        this.phones = [];\n    }\n\n    create(data, metadata) {\n        const phone = {\n            id: uuid.v4(), \n            type: data.type || '',\n            serial: data.serial || '',\n            color: data.color || '',\n            metadata: metadata, \n            created: moment.now(),\n            updated: moment.now()\n        };\n\n        this.phones.push(phone);\n        return phone;\n    }\n\n    findOne(id) {\n        return this.phones.find(phone => phone.id === id);\n    }\n\n    findAll() {\n        return this.phones;\n    }\n\n    update(id, data, metadata) {\n        const phone = this.findOne(id);\n        const index = this.phones.indexOf(phone);\n        \n        this.phones[index].type = data.type || phone.type;\n        this.phones[index].serial = data.serial || phone.serial;\n        this.phones[index].color = data.color || phone.color;\n        this.phones[index].metadata = metadata;\n        this.phones[index].updated = moment.now();\n\n        return this.phones[index];\n    }\n\n    delete(id) {\n        const phone = this.findOne(id);\n        const index = this.phones.indexOf(phone);\n        this.phones.splice(index, 1);\n        return {};\n    }\n\n}\n\nexport default new Phone();"
      ]
    },
    "sourceType": "script",
    "mtime": 1567163450425
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs/util\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/util/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs/util",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/util/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/util/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/util/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs/util",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hash = hash;\nexports.unhash = unhash;\n\nvar _objectHash = _interopRequireDefault(require(\"object-hash\"));\n\nvar _simpleEncryptor = _interopRequireDefault(require(\"simple-encryptor\"));\n\nvar key = 'real secret keys should be long and random';\nvar encryptor = (0, _simpleEncryptor[\"default\"])(key);\n\nfunction hash(data) {\n  var metadata = '';\n\n  try {\n    metadata = JSON.parse(data);\n    metadata = encryptor.encrypt(metadata);\n  } catch (error) {\n    return false;\n  }\n\n  return metadata;\n}\n\nfunction unhash(metadata) {\n  var data = {};\n\n  try {\n    data = encryptor.decrypt(metadata);\n  } catch (error) {\n    return false;\n  }\n\n  return data;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImtleSIsImVuY3J5cHRvciIsImhhc2giLCJkYXRhIiwibWV0YWRhdGEiLCJKU09OIiwicGFyc2UiLCJlbmNyeXB0IiwiZXJyb3IiLCJ1bmhhc2giLCJkZWNyeXB0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLDRDQUFaO0FBQ0EsSUFBTUMsU0FBUyxHQUFHLGlDQUFnQkQsR0FBaEIsQ0FBbEI7O0FBRU8sU0FBU0UsSUFBVCxDQUFjQyxJQUFkLEVBQW9CO0FBQ3ZCLE1BQUlDLFFBQVEsR0FBRyxFQUFmOztBQUNBLE1BQUk7QUFDQUEsSUFBQUEsUUFBUSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0gsSUFBWCxDQUFYO0FBQ0FDLElBQUFBLFFBQVEsR0FBR0gsU0FBUyxDQUFDTSxPQUFWLENBQWtCSCxRQUFsQixDQUFYO0FBQ0gsR0FIRCxDQUdFLE9BQU1JLEtBQU4sRUFBYTtBQUNYLFdBQU8sS0FBUDtBQUNIOztBQUNELFNBQU9KLFFBQVA7QUFDSDs7QUFFTSxTQUFTSyxNQUFULENBQWdCTCxRQUFoQixFQUEwQjtBQUM3QixNQUFJRCxJQUFJLEdBQUcsRUFBWDs7QUFDQSxNQUFJO0FBQ0FBLElBQUFBLElBQUksR0FBR0YsU0FBUyxDQUFDUyxPQUFWLENBQWtCTixRQUFsQixDQUFQO0FBQ0gsR0FGRCxDQUVFLE9BQU1JLEtBQU4sRUFBYTtBQUNYLFdBQU8sS0FBUDtBQUNIOztBQUNELFNBQU9MLElBQVA7QUFDSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvZG9yYS9EZXNrdG9wL25vZGVqcy91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG9iamVjdEhhc2ggZnJvbSAnb2JqZWN0LWhhc2gnO1xuaW1wb3J0IHNpbXBsZUVuY3J5cHRvciBmcm9tICdzaW1wbGUtZW5jcnlwdG9yJztcblxuY29uc3Qga2V5ID0gJ3JlYWwgc2VjcmV0IGtleXMgc2hvdWxkIGJlIGxvbmcgYW5kIHJhbmRvbSc7XG5jb25zdCBlbmNyeXB0b3IgPSBzaW1wbGVFbmNyeXB0b3Ioa2V5KTtcblxuZXhwb3J0IGZ1bmN0aW9uIGhhc2goZGF0YSkge1xuICAgIGxldCBtZXRhZGF0YSA9ICcnXG4gICAgdHJ5IHtcbiAgICAgICAgbWV0YWRhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgICBtZXRhZGF0YSA9IGVuY3J5cHRvci5lbmNyeXB0KG1ldGFkYXRhKTtcbiAgICB9IGNhdGNoKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIG1ldGFkYXRhO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdW5oYXNoKG1ldGFkYXRhKSB7XG4gICAgbGV0IGRhdGEgPSB7fTtcbiAgICB0cnkge1xuICAgICAgICBkYXRhID0gZW5jcnlwdG9yLmRlY3J5cHQobWV0YWRhdGEpO1xuICAgIH0gY2F0Y2goZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "key",
        "encryptor",
        "hash",
        "data",
        "metadata",
        "JSON",
        "parse",
        "encrypt",
        "error",
        "unhash",
        "decrypt"
      ],
      "mappings": ";;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,GAAG,GAAG,4CAAZ;AACA,IAAMC,SAAS,GAAG,iCAAgBD,GAAhB,CAAlB;;AAEO,SAASE,IAAT,CAAcC,IAAd,EAAoB;AACvB,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAI;AACAA,IAAAA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAX;AACAC,IAAAA,QAAQ,GAAGH,SAAS,CAACM,OAAV,CAAkBH,QAAlB,CAAX;AACH,GAHD,CAGE,OAAMI,KAAN,EAAa;AACX,WAAO,KAAP;AACH;;AACD,SAAOJ,QAAP;AACH;;AAEM,SAASK,MAAT,CAAgBL,QAAhB,EAA0B;AAC7B,MAAID,IAAI,GAAG,EAAX;;AACA,MAAI;AACAA,IAAAA,IAAI,GAAGF,SAAS,CAACS,OAAV,CAAkBN,QAAlB,CAAP;AACH,GAFD,CAEE,OAAMI,KAAN,EAAa;AACX,WAAO,KAAP;AACH;;AACD,SAAOL,IAAP;AACH",
      "sourceRoot": "/Users/teodora/Desktop/nodejs/util",
      "sourcesContent": [
        "import objectHash from 'object-hash';\nimport simpleEncryptor from 'simple-encryptor';\n\nconst key = 'real secret keys should be long and random';\nconst encryptor = simpleEncryptor(key);\n\nexport function hash(data) {\n    let metadata = ''\n    try {\n        metadata = JSON.parse(data);\n        metadata = encryptor.encrypt(metadata);\n    } catch(error) {\n        return false;\n    }\n    return metadata;\n}\n\nexport function unhash(metadata) {\n    let data = {};\n    try {\n        data = encryptor.decrypt(metadata);\n    } catch(error) {\n        return false;\n    }\n    return data;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1567163879058
  },
  "{\"sourceRoot\":\"/Users/teodora/Desktop/nodejs/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/teodora/Desktop/nodejs\",\"filename\":\"/Users/teodora/Desktop/nodejs/controllers/Phone.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teodora/Desktop/nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/teodora/Desktop/nodejs",
      "filename": "/Users/teodora/Desktop/nodejs/controllers/Phone.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teodora/Desktop/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teodora/Desktop/nodejs/controllers/Phone.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teodora/Desktop/nodejs/controllers/Phone.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
        "sourceFileName": "Phone.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _Phone = _interopRequireDefault(require(\"../models/Phone\"));\n\nvar _util = require(\"../util\");\n\nvar Phone = {\n  create: function () {\n    var _create = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee(req, res, next) {\n      var metadata, phone;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              metadata = '';\n\n              if (!req.body.proprietary) {\n                _context.next = 6;\n                break;\n              }\n\n              metadata = (0, _util.hash)(req.body.proprietary);\n\n              if (metadata) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'Unprocessable entity'\n              }));\n\n            case 6:\n              _context.next = 8;\n              return _Phone[\"default\"].create(req.body, metadata);\n\n            case 8:\n              phone = _context.sent;\n              res.status(201).send(phone);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              next(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    function create(_x, _x2, _x3) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  getAll: function () {\n    var _getAll = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee2(req, res, next) {\n      var phones;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _Phone[\"default\"].findAll();\n\n            case 3:\n              phones = _context2.sent;\n              res.status(200).send(phones);\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              next(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    function getAll(_x4, _x5, _x6) {\n      return _getAll.apply(this, arguments);\n    }\n\n    return getAll;\n  }(),\n  update: function () {\n    var _update = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee3(req, res, next) {\n      var id, phone, metadata, updatedPhone;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              id = req.params.id;\n              _context3.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context3.sent;\n\n              if (phone) {\n                _context3.next = 7;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.status(404).send({\n                'message': 'Phone not found'\n              }));\n\n            case 7:\n              metadata = phone.metadata;\n\n              if (!req.body.proprietary) {\n                _context3.next = 12;\n                break;\n              }\n\n              metadata = (0, _util.hash)(req.body.proprietary);\n\n              if (metadata) {\n                _context3.next = 12;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.status(400).send({\n                'message': 'Unprocessable entity'\n              }));\n\n            case 12:\n              _context3.next = 14;\n              return _Phone[\"default\"].update(id, req.body, metadata);\n\n            case 14:\n              updatedPhone = _context3.sent;\n              res.status(200).send(updatedPhone);\n              _context3.next = 22;\n              break;\n\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              next(_context3.t0);\n\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 18]]);\n    }));\n\n    function update(_x7, _x8, _x9) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }(),\n  \"delete\": function () {\n    var _delete2 = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee4(req, res, next) {\n      var id, phone, deletedPhone;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id = req.params.id;\n              _context4.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context4.sent;\n              if (!phone) res.status(404).send({\n                'message': 'Phone not found'\n              });\n              _context4.next = 8;\n              return _Phone[\"default\"][\"delete\"](id);\n\n            case 8:\n              deletedPhone = _context4.sent;\n              res.status(204).send(deletedPhone);\n              _context4.next = 15;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n              next(_context4.t0);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 12]]);\n    }));\n\n    function _delete(_x10, _x11, _x12) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  get: function () {\n    var _get = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee5(req, res, next) {\n      var id, phone;\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id = req.params.id;\n              _context5.next = 4;\n              return _Phone[\"default\"].findOne(id);\n\n            case 4:\n              phone = _context5.sent;\n              if (!phone) res.status(404).send({\n                'message': 'Phone not found'\n              });\n              res.status(200).send(phone);\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              next(_context5.t0);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 9]]);\n    }));\n\n    function get(_x13, _x14, _x15) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }()\n};\nvar _default = Phone;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBob25lLmpzIl0sIm5hbWVzIjpbIlBob25lIiwiY3JlYXRlIiwicmVxIiwicmVzIiwibmV4dCIsIm1ldGFkYXRhIiwiYm9keSIsInByb3ByaWV0YXJ5Iiwic3RhdHVzIiwic2VuZCIsIlBob25lTW9kZWwiLCJwaG9uZSIsImdldEFsbCIsImZpbmRBbGwiLCJwaG9uZXMiLCJ1cGRhdGUiLCJpZCIsInBhcmFtcyIsImZpbmRPbmUiLCJ1cGRhdGVkUGhvbmUiLCJjb25zb2xlIiwibG9nIiwiZGVsZXRlZFBob25lIiwiZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsS0FBSyxHQUFHO0FBRUpDLEVBQUFBLE1BRkk7QUFBQTtBQUFBO0FBQUEsa0RBRUdDLEdBRkgsRUFFUUMsR0FGUixFQUVhQyxJQUZiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBSUVDLGNBQUFBLFFBSkYsR0FJYSxFQUpiOztBQUFBLG1CQUtFSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FMWDtBQUFBO0FBQUE7QUFBQTs7QUFNRUYsY0FBQUEsUUFBUSxHQUFHLGdCQUFLSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FBZCxDQUFYOztBQU5GLGtCQU9PRixRQVBQO0FBQUE7QUFBQTtBQUFBOztBQUFBLCtDQVFhRixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckIsQ0FSYjs7QUFBQTtBQUFBO0FBQUEscUJBVWtCQyxrQkFBV1QsTUFBWCxDQUFrQkMsR0FBRyxDQUFDSSxJQUF0QixFQUE0QkQsUUFBNUIsQ0FWbEI7O0FBQUE7QUFVSU0sY0FBQUEsS0FWSjtBQVdGUixjQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkUsS0FBckI7QUFYRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQWFGUCxjQUFBQSxJQUFJLGFBQUo7O0FBYkU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFpQkpRLEVBQUFBLE1BakJJO0FBQUE7QUFBQTtBQUFBLG1EQWlCR1YsR0FqQkgsRUFpQlFDLEdBakJSLEVBaUJhQyxJQWpCYjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBbUJtQk0sa0JBQVdHLE9BQVgsRUFuQm5COztBQUFBO0FBbUJJQyxjQUFBQSxNQW5CSjtBQW9CRlgsY0FBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJLLE1BQXJCO0FBcEJFO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBc0JGVixjQUFBQSxJQUFJLGNBQUo7O0FBdEJFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBMEJKVyxFQUFBQSxNQTFCSTtBQUFBO0FBQUE7QUFBQSxtREEwQkdiLEdBMUJILEVBMEJRQyxHQTFCUixFQTBCYUMsSUExQmI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUE0QklZLGNBQUFBLEVBNUJKLEdBNEJTZCxHQUFHLENBQUNlLE1BQUosQ0FBV0QsRUE1QnBCO0FBQUE7QUFBQSxxQkE2QmtCTixrQkFBV1EsT0FBWCxDQUFtQkYsRUFBbkIsQ0E3QmxCOztBQUFBO0FBNkJJTCxjQUFBQSxLQTdCSjs7QUFBQSxrQkE4QkdBLEtBOUJIO0FBQUE7QUFBQTtBQUFBOztBQUFBLGdEQStCU1IsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQywyQkFBVztBQUFaLGVBQXJCLENBL0JUOztBQUFBO0FBZ0NFSixjQUFBQSxRQWhDRixHQWdDYU0sS0FBSyxDQUFDTixRQWhDbkI7O0FBQUEsbUJBaUNFSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsV0FqQ1g7QUFBQTtBQUFBO0FBQUE7O0FBa0NFRixjQUFBQSxRQUFRLEdBQUcsZ0JBQUtILEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxXQUFkLENBQVg7O0FBbENGLGtCQW1DT0YsUUFuQ1A7QUFBQTtBQUFBO0FBQUE7O0FBQUEsZ0RBb0NhRixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckIsQ0FwQ2I7O0FBQUE7QUFBQTtBQUFBLHFCQXNDeUJDLGtCQUFXSyxNQUFYLENBQWtCQyxFQUFsQixFQUFzQmQsR0FBRyxDQUFDSSxJQUExQixFQUFnQ0QsUUFBaEMsQ0F0Q3pCOztBQUFBO0FBc0NJYyxjQUFBQSxZQXRDSjtBQXVDRmhCLGNBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCVSxZQUFyQjtBQXZDRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXlDRkMsY0FBQUEsT0FBTyxDQUFDQyxHQUFSO0FBQ0FqQixjQUFBQSxJQUFJLGNBQUo7O0FBMUNFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbURBOENHRixHQTlDSCxFQThDUUMsR0E5Q1IsRUE4Q2FDLElBOUNiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBZ0RJWSxjQUFBQSxFQWhESixHQWdEU2QsR0FBRyxDQUFDZSxNQUFKLENBQVdELEVBaERwQjtBQUFBO0FBQUEscUJBaURrQk4sa0JBQVdRLE9BQVgsQ0FBbUJGLEVBQW5CLENBakRsQjs7QUFBQTtBQWlESUwsY0FBQUEsS0FqREo7QUFrREYsa0JBQUksQ0FBQ0EsS0FBTCxFQUNJUixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLDJCQUFXO0FBQVosZUFBckI7QUFuREY7QUFBQSxxQkFvRHlCQyw0QkFBa0JNLEVBQWxCLENBcER6Qjs7QUFBQTtBQW9ESU0sY0FBQUEsWUFwREo7QUFxREZuQixjQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQmEsWUFBckI7QUFyREU7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUF3REZsQixjQUFBQSxJQUFJLGNBQUo7O0FBeERFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBNERKbUIsRUFBQUEsR0E1REk7QUFBQTtBQUFBO0FBQUEsbURBNERBckIsR0E1REEsRUE0REtDLEdBNURMLEVBNERVQyxJQTVEVjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQThESVksY0FBQUEsRUE5REosR0E4RFNkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXRCxFQTlEcEI7QUFBQTtBQUFBLHFCQStEa0JOLGtCQUFXUSxPQUFYLENBQW1CRixFQUFuQixDQS9EbEI7O0FBQUE7QUErRElMLGNBQUFBLEtBL0RKO0FBZ0VGLGtCQUFJLENBQUNBLEtBQUwsRUFDSVIsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQywyQkFBVztBQUFaLGVBQXJCO0FBQ0pOLGNBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRSxLQUFyQjtBQWxFRTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXFFRlAsY0FBQUEsSUFBSSxjQUFKOztBQXJFRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLENBQWQ7ZUEyRWVKLEsiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlb2RvcmEvRGVza3RvcC9ub2RlanMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGhvbmVNb2RlbCBmcm9tICcuLi9tb2RlbHMvUGhvbmUnO1xuaW1wb3J0IHtoYXNoLCB1bmhhc2h9IGZyb20gJy4uL3V0aWwnO1xuXG5jb25zdCBQaG9uZSA9IHtcblxuICAgIGFzeW5jIGNyZWF0ZShyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgbGV0IG1ldGFkYXRhID0gJydcbiAgICAgICAgICAgIGlmIChyZXEuYm9keS5wcm9wcmlldGFyeSkge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhID0gaGFzaChyZXEuYm9keS5wcm9wcmlldGFyeSk7XG4gICAgICAgICAgICAgICAgaWYgKCFtZXRhZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsnbWVzc2FnZSc6ICdVbnByb2Nlc3NhYmxlIGVudGl0eSd9KVxuICAgICAgICAgICAgfSAgICBcbiAgICAgICAgICAgIGNvbnN0IHBob25lID0gYXdhaXQgUGhvbmVNb2RlbC5jcmVhdGUocmVxLmJvZHksIG1ldGFkYXRhKTtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKHBob25lKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIG5leHQoZXJyb3IpXG4gICAgICAgIH0gXG4gICAgfSxcblxuICAgIGFzeW5jIGdldEFsbChyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcGhvbmVzID0gYXdhaXQgUGhvbmVNb2RlbC5maW5kQWxsKCk7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChwaG9uZXMpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYXN5bmMgdXBkYXRlKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHJlcS5wYXJhbXMuaWQ7XG4gICAgICAgICAgICBjb25zdCBwaG9uZSA9IGF3YWl0IFBob25lTW9kZWwuZmluZE9uZShpZCk7XG4gICAgICAgICAgICBpZiAoIXBob25lKVxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuc2VuZCh7J21lc3NhZ2UnOiAnUGhvbmUgbm90IGZvdW5kJ30pXG4gICAgICAgICAgICBsZXQgbWV0YWRhdGEgPSBwaG9uZS5tZXRhZGF0YTtcbiAgICAgICAgICAgIGlmIChyZXEuYm9keS5wcm9wcmlldGFyeSkge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhID0gaGFzaChyZXEuYm9keS5wcm9wcmlldGFyeSk7XG4gICAgICAgICAgICAgICAgaWYgKCFtZXRhZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsnbWVzc2FnZSc6ICdVbnByb2Nlc3NhYmxlIGVudGl0eSd9KVxuICAgICAgICAgICAgfSAgICBcbiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZWRQaG9uZSA9IGF3YWl0IFBob25lTW9kZWwudXBkYXRlKGlkLCByZXEuYm9keSwgbWV0YWRhdGEpO1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQodXBkYXRlZFBob25lKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKVxuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9LCBcblxuICAgIGFzeW5jIGRlbGV0ZShyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgaWQgPSByZXEucGFyYW1zLmlkO1xuICAgICAgICAgICAgY29uc3QgcGhvbmUgPSBhd2FpdCBQaG9uZU1vZGVsLmZpbmRPbmUoaWQpO1xuICAgICAgICAgICAgaWYgKCFwaG9uZSlcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwNCkuc2VuZCh7J21lc3NhZ2UnOiAnUGhvbmUgbm90IGZvdW5kJ30pXG4gICAgICAgICAgICBjb25zdCBkZWxldGVkUGhvbmUgPSBhd2FpdCBQaG9uZU1vZGVsLmRlbGV0ZShpZCk7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwNCkuc2VuZChkZWxldGVkUGhvbmUpXG4gICAgICAgICAgICBcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIG5leHQoZXJyb3IpXG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYXN5bmMgZ2V0KHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHJlcS5wYXJhbXMuaWQ7XG4gICAgICAgICAgICBjb25zdCBwaG9uZSA9IGF3YWl0IFBob25lTW9kZWwuZmluZE9uZShpZCk7XG4gICAgICAgICAgICBpZiAoIXBob25lKVxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKHsnbWVzc2FnZSc6ICdQaG9uZSBub3QgZm91bmQnfSlcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHBob25lKVxuXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBuZXh0KGVycm9yKVxuICAgICAgICB9XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFBob25lOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Phone.js"
      ],
      "names": [
        "Phone",
        "create",
        "req",
        "res",
        "next",
        "metadata",
        "body",
        "proprietary",
        "status",
        "send",
        "PhoneModel",
        "phone",
        "getAll",
        "findAll",
        "phones",
        "update",
        "id",
        "params",
        "findOne",
        "updatedPhone",
        "console",
        "log",
        "deletedPhone",
        "get"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,KAAK,GAAG;AAEJC,EAAAA,MAFI;AAAA;AAAA;AAAA,kDAEGC,GAFH,EAEQC,GAFR,EAEaC,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIEC,cAAAA,QAJF,GAIa,EAJb;;AAAA,mBAKEH,GAAG,CAACI,IAAJ,CAASC,WALX;AAAA;AAAA;AAAA;;AAMEF,cAAAA,QAAQ,GAAG,gBAAKH,GAAG,CAACI,IAAJ,CAASC,WAAd,CAAX;;AANF,kBAOOF,QAPP;AAAA;AAAA;AAAA;;AAAA,+CAQaF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CARb;;AAAA;AAAA;AAAA,qBAUkBC,kBAAWT,MAAX,CAAkBC,GAAG,CAACI,IAAtB,EAA4BD,QAA5B,CAVlB;;AAAA;AAUIM,cAAAA,KAVJ;AAWFR,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,KAArB;AAXE;AAAA;;AAAA;AAAA;AAAA;AAaFP,cAAAA,IAAI,aAAJ;;AAbE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiBJQ,EAAAA,MAjBI;AAAA;AAAA;AAAA,mDAiBGV,GAjBH,EAiBQC,GAjBR,EAiBaC,IAjBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAmBmBM,kBAAWG,OAAX,EAnBnB;;AAAA;AAmBIC,cAAAA,MAnBJ;AAoBFX,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,MAArB;AApBE;AAAA;;AAAA;AAAA;AAAA;AAsBFV,cAAAA,IAAI,cAAJ;;AAtBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0BJW,EAAAA,MA1BI;AAAA;AAAA;AAAA,mDA0BGb,GA1BH,EA0BQC,GA1BR,EA0BaC,IA1Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BIY,cAAAA,EA5BJ,GA4BSd,GAAG,CAACe,MAAJ,CAAWD,EA5BpB;AAAA;AAAA,qBA6BkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CA7BlB;;AAAA;AA6BIL,cAAAA,KA7BJ;;AAAA,kBA8BGA,KA9BH;AAAA;AAAA;AAAA;;AAAA,gDA+BSR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CA/BT;;AAAA;AAgCEJ,cAAAA,QAhCF,GAgCaM,KAAK,CAACN,QAhCnB;;AAAA,mBAiCEH,GAAG,CAACI,IAAJ,CAASC,WAjCX;AAAA;AAAA;AAAA;;AAkCEF,cAAAA,QAAQ,GAAG,gBAAKH,GAAG,CAACI,IAAJ,CAASC,WAAd,CAAX;;AAlCF,kBAmCOF,QAnCP;AAAA;AAAA;AAAA;;AAAA,gDAoCaF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CApCb;;AAAA;AAAA;AAAA,qBAsCyBC,kBAAWK,MAAX,CAAkBC,EAAlB,EAAsBd,GAAG,CAACI,IAA1B,EAAgCD,QAAhC,CAtCzB;;AAAA;AAsCIc,cAAAA,YAtCJ;AAuCFhB,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,YAArB;AAvCE;AAAA;;AAAA;AAAA;AAAA;AAyCFC,cAAAA,OAAO,CAACC,GAAR;AACAjB,cAAAA,IAAI,cAAJ;;AA1CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDA8CGF,GA9CH,EA8CQC,GA9CR,EA8CaC,IA9Cb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDIY,cAAAA,EAhDJ,GAgDSd,GAAG,CAACe,MAAJ,CAAWD,EAhDpB;AAAA;AAAA,qBAiDkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CAjDlB;;AAAA;AAiDIL,cAAAA,KAjDJ;AAkDF,kBAAI,CAACA,KAAL,EACIR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB;AAnDF;AAAA,qBAoDyBC,4BAAkBM,EAAlB,CApDzB;;AAAA;AAoDIM,cAAAA,YApDJ;AAqDFnB,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,YAArB;AArDE;AAAA;;AAAA;AAAA;AAAA;AAwDFlB,cAAAA,IAAI,cAAJ;;AAxDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4DJmB,EAAAA,GA5DI;AAAA;AAAA;AAAA,mDA4DArB,GA5DA,EA4DKC,GA5DL,EA4DUC,IA5DV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8DIY,cAAAA,EA9DJ,GA8DSd,GAAG,CAACe,MAAJ,CAAWD,EA9DpB;AAAA;AAAA,qBA+DkBN,kBAAWQ,OAAX,CAAmBF,EAAnB,CA/DlB;;AAAA;AA+DIL,cAAAA,KA/DJ;AAgEF,kBAAI,CAACA,KAAL,EACIR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB;AACJN,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,KAArB;AAlEE;AAAA;;AAAA;AAAA;AAAA;AAqEFP,cAAAA,IAAI,cAAJ;;AArEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAd;eA2EeJ,K",
      "sourceRoot": "/Users/teodora/Desktop/nodejs/controllers",
      "sourcesContent": [
        "import PhoneModel from '../models/Phone';\nimport {hash, unhash} from '../util';\n\nconst Phone = {\n\n    async create(req, res, next) {\n        try {\n            let metadata = ''\n            if (req.body.proprietary) {\n                metadata = hash(req.body.proprietary);\n                if (!metadata)\n                    return res.status(400).send({'message': 'Unprocessable entity'})\n            }    \n            const phone = await PhoneModel.create(req.body, metadata);\n            res.status(201).send(phone);\n        } catch (error) {\n            next(error)\n        } \n    },\n\n    async getAll(req, res, next) {\n        try {\n            const phones = await PhoneModel.findAll();\n            res.status(200).send(phones);\n        } catch (error) {\n            next(error);\n        }\n    },\n\n    async update(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                return res.status(404).send({'message': 'Phone not found'})\n            let metadata = phone.metadata;\n            if (req.body.proprietary) {\n                metadata = hash(req.body.proprietary);\n                if (!metadata)\n                    return res.status(400).send({'message': 'Unprocessable entity'})\n            }    \n            const updatedPhone = await PhoneModel.update(id, req.body, metadata);\n            res.status(200).send(updatedPhone);\n        } catch (error) {\n            console.log(error)\n            next(error);\n        }\n    }, \n\n    async delete(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                res.status(404).send({'message': 'Phone not found'})\n            const deletedPhone = await PhoneModel.delete(id);\n            res.status(204).send(deletedPhone)\n            \n        } catch (error) {\n            next(error)\n        }\n    },\n\n    async get(req, res, next) {\n        try {\n            const id = req.params.id;\n            const phone = await PhoneModel.findOne(id);\n            if (!phone)\n                res.status(404).send({'message': 'Phone not found'})\n            res.status(200).send(phone)\n\n        } catch (error) {\n            next(error)\n        }\n    }\n\n}\n\nexport default Phone;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567170199422
  }
}